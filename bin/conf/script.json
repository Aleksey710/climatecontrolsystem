{
    "data":[
        { "lineComment":"------------------------------------------------------------------------------------------------------" },
        { "lineComment":"При нажатии кнопки переменная принимает значение 1, отпускание - 0" },
            { "name":"buttons.buttons.F1",      "title":"Функциональная кнопка F1",                         "value": 0 },
            { "name":"buttons.buttons.F2",      "title":"Функциональная кнопка F2",                         "value": 0 },
            { "name":"buttons.buttons.F3",      "title":"Функциональная кнопка F3",                         "value": 0 },
            { "name":"buttons.buttons.F4",      "title":"Функциональная кнопка F4",                         "value": 0 },
            { "name":"buttons.buttons.Off",     "title":"Функциональная кнопка Off",                        "value": 0 },
        { "lineComment":"------------------------------------------------------------------------------------------------------" },
        { "lineComment":"Данные внешних устройств" },
            { "name":"modbus.BVV.device",       "title":"Состояние устройства БВВ",                         "value": 0 },
            { "name":"modbus.BVV.r30000",       "title":"Регистр дискретных входов 1",                      "value": 0 },
            { "name":"modbus.BVV.r30001",       "title":"Регистр дискретных входов 2",                      "value": 0 },
            { "name":"modbus.BVV.r30002",       "title":"Салон (tсал)",                                     "value": 0 },
            { "name":"modbus.BVV.r30003",       "title":"Приточный (воздуховод) (tпр)",                     "value": 0 },
            { "name":"modbus.BVV.r30004",       "title":"Наружный (tнв)",                                   "value": 0 },
            { "name":"modbus.BVV.r30005",       "title":"Вода в котле (tкотла)",                            "value": 0 },
            { "name":"modbus.BVV.r30006",       "title":"Ток батареи (АКБ)",                                "value": 0 },
            { "name":"modbus.BVV.r30007",       "title":"Ток генератора",                                   "value": 0 },
            { "name":"modbus.BVV.r30008",       "title":"Напряжение сети",                                  "value": 0 },

            { "name":"modbus.BVV.r40000",       "title":"Регистр дискретных выходов",                       "value": 0 },
            { "name":"modbus.BVV.r40001",       "title":"Выходное напряжение канала 1(Коррекция температуры)", "value": 0 },
            { "name":"modbus.BVV.r40002",       "title":"Выходное напряжение канала 2",                     "value": 0 },
            { "name":"modbus.BVV.r40003",       "title":"Выходное напряжение канала 3",                     "value": 0 },
            { "name":"modbus.BVV.r40004",       "title":"Выходное напряжение канала 4",                     "value": 0 },
            { "name":"modbus.BVV.r40028",       "title":"Версия встроенного ПО БВВ",                        "value": 0 },
            { "name":"modbus.BVV.r40029",       "title":"Год прошивки",                                     "value": 0 },
            { "name":"modbus.BVV.r40030",       "title":"Месяц прошивки",                                   "value": 0 },
            { "name":"modbus.BVV.r40031",       "title":"День прошивки",                                    "value": 0 },

            { "name":"modbus.A9.device",        "title":"Состояние устройства БУТ (А9)",                    "value": 0 },
            { "name":"modbus.A9.r40001",        "title":"Коррекция температуры запись",                     "value": 0 },
            { "name":"modbus.A9.r40028",        "title":"Версия встроенного ПО БУТ",                        "value": 0 },
            { "name":"modbus.A9.r40029",        "title":"Год прошивки",                                     "value": 0 },
            { "name":"modbus.A9.r40030",        "title":"Месяц прошивки",                                   "value": 0 },
            { "name":"modbus.A9.r40031",        "title":"День прошивки",                                    "value": 0 },

            { "name":"modbus.Tsal.device",      "title":"Состояние датчика температуры салона",             "value": 0 },
            { "name":"modbus.Tsal.r30000",      "title":"Салон (tсал)",                                     "value": 0 },

            { "name":"modbus.Tnv.device",       "title":"Состояние датчика температуры наружного воздуха",  "value": 0 },
            { "name":"modbus.Tnv.r30000",       "title":"Наружный (tнв)",                                   "value": 0 },

            { "name":"modbus.Tpr.device",       "title":"Состояние датчика температуры приточного воздуха", "value": 0 },
            { "name":"modbus.Tpr.r30000",       "title":"Приточный (воздуховод) (tпр)",                     "value": 0 },

            { "name":"modbus.Tkotl.device",     "title":"Состояние датчика температуры котла",              "value": 0 },
            { "name":"modbus.Tkotl.r30000",     "title":"Вода в котле (tкотла)",                            "value": 0 },
        { "lineComment":"------------------------------------------------------------------------------------------------------" },

        { "lineComment":"------------------------------------------------------------------------------------------------------" },
        { "lineComment":"Расчетные данные входные" },
            { "name":"display.temp.t_nv",         "title":"Температура наружного воздуха",   "value": 0 },
            { "name":"display.temp.t_sal",        "title":"Температура салона",              "value": 0 },
            { "name":"display.temp.t_pr",         "title":"Температура приточного воздуха",  "value": 0 },
            { "name":"display.temp.t_kotl",       "title":"Температура котла",               "value": 0 },
            { "name":"display.temp.t_ust",        "title":"Температура уставки",             "value": 0 },
            { "name":"display.U_I.I_bat",         "title":"Ток АКБ ",                        "value": 0 },
            { "name":"display.U_I.I_gen",         "title":"Ток генератора ",                 "value": 0 },
            { "name":"display.U_I.U_net",         "title":"Напряжение сети ",                "value": 0 },
            { "name":"display.BVV.u3000",         "title":"Напруга 3000В",                   "value": 0 },
            { "name":"display.BVV.VVO_1",         "title":"ВВО 1гр",                         "value": 0 },
            { "name":"display.BVV.VVO_2",         "title":"ВВО 2гр",                         "value": 0 },
            { "name":"display.BVV.NVO",           "title":"NVO",                             "value": 0 },
            { "name":"display.BVV.generator",     "title":"Вн. мережа 380В/генератор",       "value": 0 },
            { "name":"display.BVV.automode",      "title":"Автоматичний режим",              "value": 0 },
            { "name":"display.BVV.crash",         "title":"Аварiя",                          "value": 0 },
            { "name":"display.BVV.elEquipmentOn", "title":"ЕО включене",                     "value": 0 },
            { "name":"display.BVV.condFailure",   "title":"Кондицiонер ВIДМОВА",             "value": 0 },
            { "name":"display.BVV.cont2Failure",  "title":"Вiдмова контура охолодження 2",   "value": 0 },
            { "name":"display.BVV.cont1Failure",  "title":"Вiдмова контура охолодження 1",   "value": 0 },
            { "name":"display.BVV.condWorked",    "title":"Кондицiонер РОБОТА",              "value": 0 },
            { "name":"display.BVV.cooling",       "title":"Охолодження",                     "value": 0 },
            { "name":"display.BVV.heater",        "title":"Калорифер",                       "value": 0 },
            { "name":"display.BVV.umax_zrk",      "title":"Umax ЗРК",                        "value": 0 },
            { "name":"display.BVV.r_insulation",  "title":"R iзоляцiї < 1 kOm",              "value": 0 },
            { "name":"display.BVV.ventilation",   "title":"Вентиляція увімкнена",            "value": 0 },
            { "name":"display.BVV.version",       "title":"Версия встроенного ПО БВВ",       "value": 0 },
            { "name":"display.BVV.year",          "title":"Год прошивки",                    "value": 0 },
            { "name":"display.BVV.month",         "title":"Месяц прошивки",                  "value": 0 },
            { "name":"display.BVV.day",           "title":"День прошивки",                   "value": 0 },

            { "name":"display.A9.version",        "title":"Версия встроенного ПО БУТ",       "value": 0 },
            { "name":"display.A9.year",           "title":"Год прошивки",                    "value": 0 },
            { "name":"display.A9.month",          "title":"Месяц прошивки",                  "value": 0 },
            { "name":"display.A9.day",            "title":"День прошивки",                   "value": 0 },

            { "name":"display.wagon.res",         "title":"Ресур в часах",                   "value": 0 },

        { "lineComment":"------------------------------------------------------------------------------------------------------" },

        { "lineComment":"------------------------------------------------------------------------------------------------------" },
        { "lineComment":"Системные данные " },
        { "lineComment":"------------------------------------------------------------------------------------------------------" },

        { "lineComment":"------------------------------------------------------------------------------------------------------" },
        { "lineComment":"Расчетные данные промежуточные" },

            { "lineComment":"Защита от перегрева котла. Запрещает работу насоса и ВВО" },
                { "name":"vr.kotl.overheat",       "title":"Признак того, что котел перегрелся.",        "value": 0 },
                { "name":"vr.kotl.time",           "title":"Время превышения температуры, достигнув которого взведется признак перегрева котла.",        "value": 0 },
            { "lineComment":"---------------------------------------------------------------------" },
            { "lineComment":"Переменные алгоритма включения НВО" },
                { "name":"vr.timout.dlhon",           "title":"атримка включення НВО, Сек",                          "value": 0 },
                { "name":"vr.timout.dlhoff",          "title":"затримка виключення НВО, Сек",                        "value": 0 },
                { "name":"vr.timout.dlhr",            "title":"затримка відповіді включення НВО від БВВ, Сек",       "value": 0 },
                { "name":"vr.timout.dlh",             "title":"затримка повторного включення НВО, Сек",              "value": 0 },
                { "name":"vr.timout.nvoResponseTime", "title":"Время, ожидания ответа включения НВО",                "value": 0 },
                { "name":"vr.temp.nvoOn",             "title":"Включение НВО признак для запуска отсчета задержек",  "value": 0 },
                { "name":"vr.temp.nvoOff",            "title":"Выключение НВО признак для запуска отсчета задержек", "value": 0 },
                { "name":"vr.temp.nvoFirst",          "title":"Признак повторного включения НВО (0)",                "value": 0 },
                { "name":"vr.temp.nvoResponseError",  "title":"Ошибка ответа НВО",                                   "value": 0 },
            { "lineComment":"---------------------------------------------------------------------" },
            { "lineComment":"Переменные алгоритма включения ВВО" },
                { "name":"vr.temp.vvokotlon",          "title":"Температура котла необхідна для ввімкненяя ВВО",           "value": 0 },
                { "name":"vr.temp.vvokotloff",         "title":"Температура котла необхідна для вимкненя ВВО",             "value": 0 },
                { "name":"vr.timout.vvodsd",           "title":"час простою перед наступним включенням ВВО, Сек",          "value": 0 },
                { "name":"vr.timout.vvosod",           "title":"затримка включення ВВО, Сек",                              "value": 0 },
                { "name":"vr.timout.vvord",            "title":"затримка відповіді включення ВВО від БВВ, Сек",            "value": 0 },
                { "name":"vr.timout.vvo1ResponseTime", "title":"Время, ожидания ответа включения ВВО 1 гр.",               "value": 0 },
                { "name":"vr.timout.vvo2ResponseTime", "title":"Время, ожидания ответа включения ВВО 2 гр.",               "value": 0 },
                { "name":"vr.temp.vvo1On",             "title":"Включение ВВО 1 гр. признак для запуска отсчета задержек", "value": 0 },
                { "name":"vr.temp.vvo2On",             "title":"Включение ВВО 2 гр. признак для запуска отсчета задержек", "value": 0 },
                { "name":"vr.temp.vvoOn",              "title":"Включение ВВО признак формируется после формирования задержек и необходим для непосредственного управления группами.", "value": 0 },
                { "name":"vr.temp.vvoInvert",          "title":"Смена групп ВВО: false(0) – при включении первой группы вкл. первая; true(1) – при включении первой группы вкл. вторая.", "value": 0 },
                { "name":"vr.temp.vvoFirst",           "title":"Признак повторного включения ВВО (0)",                     "value": 0 },
                { "name":"vr.temp.vvo1ResponseError",  "title":"Ошибка ответа ВВО гр1",                                    "value": 0 },
                { "name":"vr.temp.vvo2ResponseError",  "title":"Ошибка ответа ВВО гр2",                                    "value": 0 },
            { "lineComment":"---------------------------------------------------------------------" },
            { "lineComment":"Переменные алгоритма контроля электро оборудования" },
                { "name":"vr.timout.ImaxBat", "title":"Время на протяжении которого принимается решение решение высвечивать или не высвечивать сообщение «Високий струм», определенное по току батареи.", "value": 0 },
                { "name":"vr.msg.ImaxBat",    "title":"Высвечивать или не высвечивать сообщение «Високий струм», определенное по току батареи.",                                                          "value": 0 },
                { "name":"vr.timout.Umax",    "title":"Время на протяжении которого принимается решение высвечивать или не высвечивать сообщение «ВИСОКА НАПРУГА».",                                      "value": 0 },
                { "name":"vr.msg.Umax",       "title":"Высвечивать или не высвечивать сообщение «ВИСОКА НАПРУГА»",                                                                                        "value": 0 },
                { "name":"vr.timout.Umin",    "title":"Время на протяжении которого принимается решение высвечивать или не высвечивать сообщение «Батарея розряджена».",                                  "value": 0 },
                { "name":"vr.msg.Umin",       "title":"Высвечивать или не высвечивать сообщение «Батарея розряджена»",                                                                                    "value": 0 },
                { "name":"vr.timout.Imax",    "title":"Время на протяжении которого принимается решение высвечивать или не высвечивать сообщение «Високий струм», определенное по току генератора..",     "value": 0 },
                { "name":"vr.msg.Imax",       "title":"Высвечивать или не высвечивать сообщение «Високий струм», определенное по току генератора.",                                                       "value": 0 },
                { "name":"vr.msg.ImaxGeneral","title":"Признак превышения любого из токов генератора или АБ. Выводит или скрывает сообщение «Високий струм».",                                            "value": 0 },
            { "lineComment":"---------------------------------------------------------------------" },
            { "lineComment":"Переменные наличия связи с устройствами по RS485" },
                { "name":"vr.msg.BVVConnError",    "title":"Нет связи с БВВ.",                                                                 "value": 0 },
                { "name":"vr.timout.BVVConnError", "title":"Время формирования задержки на установку признака отсутствия связи с БВВ.",       "value": 0 },
                { "name":"vr.msg.A9ConnError",     "title":"Нет связи с А9 (БУТ).",                                                           "value": 0 },
                { "name":"vr.timout.A9ConnError",  "title":"Время формирования задержки на установку признака отсутствия связи с А9 (БУТ).",  "value": 0 },
            { "lineComment":"---------------------------------------------------------------------" },
            { "lineComment":"Переменные блокировки авторежима" },
                { "name":"vr.msg.automodeDisabled", "title":"Запрет авторежима.",                   "value": 0 },
                { "name":"vr.msg.automodeDisabledNvo", "title":"Запрет авторежима. NVO",            "value": 0 },
                { "name":"vr.msg.automodeDisabledVvo", "title":"Запрет авторежима. VVO",            "value": 0 },
                { "name":"vr.msg.automodeDisabledManual", "title":"Запрет авторежима. Manual",      "value": 0 },
                { "name":"vr.msg.manualModeOn",     "title":"Ручний режим увімкнено.",              "value": 0 },
                { "name":"vr.BVV.automode",         "title":"Значение дискретного входа 'Автоматичний режим'. ",               "value": 0 },
                { "name":"vr.BVV.automodeTmpCmd",   "title":"Команды, которые выдавались на момент выключения сигнала 'Автоматичний режим'. ", "value": 0 },
            { "lineComment":"---------------------------------------------------------------------" },
            { "lineComment":"Переменные вспомогательные" },
                { "name":"vr.msg.u3000Error",           "title":"Отсутсвует напряжение 3000В (1 – отсуствует, 0 -  присутствует).", "value": 0 },
                { "name":"vr.msg.u3000ErrorTemp",       "title":"Отсутсвует напряжение 3000В (временна) (1 – отсуствует, 0 -  присутствует).", "value": 0 },
                { "name":"vr.temp.temp_T_ust",          "title":"Временная переменная для хранения Т уст",                          "value": 0 },
                { "name":"vr.msg.A9ConnErrorLastState", "title":"Флаг - Последнее состояние подключения А9 (1-обрыв)",              "value": 0 },
            { "lineComment":"---------------------------------------------------------------------" },
            { "lineComment":"Переменные признаки обрыва датчиков" },
                { "name":"vr.msg.t_nv",   "title":"Обрив датчика зовнішньої температури.",            "value": 0 },
                { "name":"vr.msg.t_sal",  "title":"Обрив датчика температури салону.",                "value": 0 },
                { "name":"vr.msg.t_pr",   "title":"Обрив датчика температури приточного повітря.",    "value": 0 },
                { "name":"vr.msg.t_kotl", "title":"Обрив датчика температури котла.",                 "value": 0 },
            { "lineComment":"---------------------------------------------------------------------" },


            { "name":"vr.debug.vr1", "title":"Отладка1",                 "value": 0 },
            { "name":"vr.debug.vr2", "title":"Отладка2",                 "value": 0 },
            { "name":"vr.debug.vr3", "title":"Отладка3",                 "value": 0 },
            { "name":"vr.debug.vr4", "title":"Отладка4",                 "value": 0 },
            { "name":"vr.debug.vr5", "title":"Отладка5",                 "value": 0 },
            { "name":"vr.debug.vr6", "title":"Отладка6",                 "value": 0 },
        { "lineComment":"------------------------------------------------------------------------------------------------------" },

        { "lineComment":"------------------------------------------------------------------------------------------------------" },
        { "lineComment":"Расчетные данные выходные" },
                { "name":"out.BVV.vvo1On", "title":"Включение ВВО 1 гр.", "value": 0 },
                { "name":"out.BVV.vvo2On", "title":"Включение ВВО 2 гр.", "value": 0 },
                { "name":"out.BVV.pompOn", "title":"Включение насоса", "value": 0 },
                { "name":"out.BVV.nvoOn",  "title":"Включение НВО", "value": 0 },
                { "name":"out.BVV.fault",  "title":"Авария (по Imax, Umax, Umin)", "value": 0 },
                { "name":"out.BVV.bpOn",   "title":"Включение БП", "value": 0 },
                { "name":"out.BVV.pvvOn",  "title":"Повернення (с БВВ привключении)", "value": 0 },
        { "lineComment":"------------------------------------------------------------------------------------------------------" },

        { "lineComment":"------------------------------------------------------------------------------------------------------" },
        { "lineComment":"Данные для посчета наработки" },
            { "name":"vr.WorkedHours.startTime",      "title":"Время начала работы программы", "value": 0 },
            { "name":"vr.WorkedHours.nextUpdateTime", "title":"Время следующего обновления наработки", "value": 0 },
        { "lineComment":"------------------------------------------------------------------------------------------------------" },

        { "lineComment":"------------------------------------------------------------------------------------------------------" },
        { "lineComment":"Данные для реализации задержки на выключение" },
            { "name":"vr.shutdownDelay.receiveRequestTime", "title":"Время получения запроса на выключение",       "value": 0 },
            { "name":"vr.shutdownDelay.delayActivated",     "title":"Задержка активирована",                       "value": 0 },
            { "name":"vr.shutdownDelay.shutdownExec",       "title":"Признак того, что попытка вызова функции systemShutdown() произошла", "value": 0 },
        { "lineComment":"------------------------------------------------------------------------------------------------------" }
    ],
    "functions":[
        {
            "name":"setBVVConnError",
            "sources":[ "sys.time.curent" ],
            "processing":"
                /* 5 Відсутній зв’язок з БВВ - електрообладнання */
                /*
                    При обнаружении отсутствия связи БИУ с БВВ должна быть произведена запись в
                журнал “Відсутній зв’язок з БВВ” и вывод на экран сообщения «Перейти в резервний
                режим управління», при этом:
                    - БВВ через время 3 сек отключает все дискретные выходы
                (9 / 0000 0000 0000 0000) и находится в ждущем режиме, при восстановлении
                соединения - продолжает работу;
                    - БИУ через время 3 сек должен прекратить работу по алгоритму управления,
                прекратить анализ величин токов, напряжений, температур, обнулить (две черточки
                вместо параметров) эти показания, снять все ранее выводимые сообщения на главный
                экран, кроме «Перейти в резервний режим управління». Далее перейти в ждущий
                режим и при восстановлении соединения - продолжить работу.
                */
                if ( modbus.BVV.device.data() < 1 )
                {
                    if ( vr.timout.BVVConnError.data() == 0 )
                    {
                        /*Запуск счетчика*/
                        vr.timout.BVVConnError.setData( sys.time.curent.data() + 3 );
                    } else if ( sys.time.curent.data() >= vr.timout.BVVConnError.data() )
                    {
                        /*Запись в журнал и вывод на экран*/
                        if ( vr.msg.BVVConnError.data() == 0 )
                        {
                            archive( 5 );
                            vr.msg.BVVConnError.setData( 1 );
                        }
                    }
                } else
                {
                    vr.timout.BVVConnError.setData( 0 );
                    vr.msg.BVVConnError.setData( 0 );
                }
                "
        },
        {
            "name":"setA9ConnError",
            "sources":[ "sys.time.curent" ],
            "processing":"
                /* 39 Відсутній зв’язок з БУТ - кліматична установка АР */
                /*
                    При обнаружении отсутствия связи БИУ с БУТ должна быть произведена запись в
                журнал “Відсутній зв’язок з БУТ” и вывод на экран сообщения «Не можлива
                корекція температури», при этом:
                    - БУТ через время 3 сек устанавливает базовую уставку для кондиционера (24°C);
                    - БИУ через время 3 сек должен прекратить возможность коррекции температуры
                уставки (с помощью кнопок F3,F4) и использовать в алгоритме управления отоплением
                базовую уставку (24оС).
                */
                if ( modbus.A9.device.data() < 1 )
                {
                    if ( vr.timout.A9ConnError.data() == 0 )
                    {
                        /*Запуск счетчика*/
                        vr.timout.A9ConnError.setData( sys.time.curent.data() + 3 );
                    } else if ( sys.time.curent.data() >= vr.timout.A9ConnError.data() )
                    {
                        /*Запись в журнал и вывод на экран*/
                        if ( vr.msg.A9ConnError.data() == 0 )
                        {
                            archive( 39 );
                            vr.msg.A9ConnError.setData( 1 );
                        }
                    }
                } else
                {
                    vr.timout.A9ConnError.setData( 0 );
                    vr.msg.A9ConnError.setData( 0 );
                }
                "
        },
        {
            "name":"setBVVr40000",
            "sources":[
                "out.BVV.vvo1On",
                "out.BVV.vvo2On",
                "out.BVV.pompOn",
                "out.BVV.nvoOn",
                "out.BVV.fault"
                ],
            "processing":"
                if ( vr.msg.BVVConnError.data() != 1 )
                {
                    var outData;
                    outData = modbus.BVV.r40000.data();

                    if ( out.BVV.vvo1On.data() == 1 )
                    {
                        outData |= 0x00000001;
                    } else
                    {
                        outData &= ~0x00000001;
                    }

                    if ( out.BVV.vvo2On.data() == 1 )
                    {
                        outData |= 0x00000002;
                    } else
                    {
                        outData &= ~0x00000002;
                    }

                    if ( out.BVV.pompOn.data() == 1 )
                    {
                        outData |= 0x00000004;
                    } else
                    {
                        outData &= ~0x00000004;
                    }

                    if ( out.BVV.nvoOn.data() == 1 )
                    {
                        outData |= 0x00000008;
                    } else
                    {
                        outData &= ~0x00000008;
                    }

                    if ( out.BVV.fault.data() == 1 )
                    {
                        outData |= 0x00000010;
                    } else
                    {
                        outData &= ~0x00000010;
                    }

                    modbus.BVV.r40000.setData( outData );
                } else {
                    modbus.BVV.r40000.setData( 0 );
                }
                "
        },
        {
            "name":"setT_sal",
            "sources":[
                "modbus.BVV.device",
                "modbus.BVV.r30002",
                "vr.msg.BVVConnError",
                "modbus.Tsal.device",
                "modbus.Tsal.r30000"
                ],
            "processing":"
                if ( settings.temp.useBVV.data() == 1 )
                {
                    if ( modbus.BVV.device.data() == 1 )
                    {
                        display.temp.t_sal.setData(
                            settings.offset.cmc.data()  *
                            ( modbus.BVV.r30002.data()/settings.offset.oc.data() )
                            + settings.offset.tc.data() );

                        if ( display.temp.t_sal.data() >= settings.temp.sev.data() )
                        {
                            if ( vr.msg.t_sal.data() < 1 )
                            {
                                /*Запись в журнал*/
                                archive( 24 );
                                vr.msg.t_sal.setData( 1 );
                            }
                        } else
                        {
                            vr.msg.t_sal.setData( 0 );
                        }
                    } else if ( vr.msg.BVVConnError.data() == 1 ){
                       display.temp.t_sal.setData( 0 );
                       vr.msg.t_sal.setData( 0 );
                    }
                } else {
                    if ( modbus.Tsal.device.data() )
                    {
                        display.temp.t_sal.setData(
                            settings.offset.cmc_mb.data()  *
                            ( modbus.Tsal.r30000.data()/settings.offset.oc.data() )
                            + settings.offset.tc_mb.data() );

                        if ( display.temp.t_sal.data() >= settings.temp.sev.data() )
                        {
                            if ( vr.msg.t_sal.data() < 1 )
                            {
                                /*Запись в журнал*/
                                archive( 24 );
                                vr.msg.t_sal.setData( 1 );
                            }
                        } else
                        {
                            vr.msg.t_sal.setData( 0 );
                        }
                    } else {
                       display.temp.t_sal.setData( 0 );
                       if ( vr.msg.t_sal.data() < 1 )
                       {
                           /*Запись в журнал*/
                           archive( 24 );
                           vr.msg.t_sal.setData( 1 );
                       }
                    }
                }
                "
        },
        {
            "name":"setT_pr",
            "sources":[
                "modbus.BVV.device",
                "modbus.BVV.r30003",
                "vr.msg.BVVConnError",
                "modbus.Tpr.device",
                "modbus.Tpr.r30000"
                ],
            "processing":"
                if ( settings.temp.useBVV.data() == 1 )
                {
                    if (modbus.BVV.device.data() == 1 )
                    {
                        display.temp.t_pr.setData(
                            settings.offset.cmf.data()  *
                            (modbus.BVV.r30003.data()/settings.offset.oc.data())
                            + settings.offset.af.data() );

                        if ( display.temp.t_pr.data() >= settings.temp.sev.data() )
                        {
                            if ( vr.msg.t_pr.data() < 1 )
                            {
                                /*Запись в журнал*/
                                archive( 23 );
                                vr.msg.t_pr.setData( 1 );
                            }
                        } else
                        {
                            vr.msg.t_pr.setData( 0 );
                        }
                    } else if ( vr.msg.BVVConnError .data() == 1 ) {
                       display.temp.t_pr.setData( 0 );
                       vr.msg.t_pr.setData( 0 );
                    }
                } else {
                    if (modbus.Tpr.device.data()) {
                        display.temp.t_pr.setData(
                            settings.offset.cmf_mb.data() *
                            (modbus.Tpr.r30000.data()/settings.offset.oc.data())
                            + settings.offset.af_mb.data() );

                        if ( display.temp.t_pr.data() >= settings.temp.sev.data() )
                        {
                            if ( vr.msg.t_pr.data() < 1 )
                            {
                                /*Запись в журнал*/
                                archive( 23 );
                                vr.msg.t_pr.setData( 1 );
                            }
                        } else
                        {
                            vr.msg.t_pr.setData( 0 );
                        }
                    } else {
                       display.temp.t_pr.setData( 0 );
                       if ( vr.msg.t_pr.data() < 1 )
                       {
                           /*Запись в журнал*/
                           archive( 23 );
                           vr.msg.t_pr.setData( 1 );
                       }
                    }
                }"
        },
        {
            "name":"setT_nv",
            "sources":[
                "modbus.BVV.device",
                "modbus.BVV.r30004",
                "vr.msg.BVVConnError",
                "modbus.Tnv.device",
                "modbus.Tnv.r30000"
                ],
            "processing":"
                if ( settings.temp.useBVV.data() == 1 )
                {
                    if ( modbus.BVV.device.data() == 1 )
                    {
                        display.temp.t_nv.setData(
                            settings.offset.cmo.data() *
                            (modbus.BVV.r30004.data()/settings.offset.oc.data())
                            + settings.offset.to.data() );

                        if ( display.temp.t_nv.data() >= settings.temp.sev.data() )
                        {
                            if ( vr.msg.t_nv.data() < 1 )
                            {
                                /*Запись в журнал*/
                                archive( 21 );
                                vr.msg.t_nv.setData( 1 );
                            }
                        } else
                        {
                            vr.msg.t_nv.setData( 0 );
                        }
                    } else if ( vr.msg.BVVConnError.data() == 1 ) {
                       display.temp.t_nv.setData( 0 );
                       vr.msg.t_nv.setData( 0 );
                    }
                } else
                {
                    if (modbus.Tnv.device.data())
                    {
                        display.temp.t_nv.setData(
                            settings.offset.cmo_mb.data() *
                            (modbus.Tnv.r30000.data()/settings.offset.oc.data())
                            + settings.offset.to_mb.data() );

                        if ( display.temp.t_nv.data() >= settings.temp.sev.data() )
                        {
                            if ( vr.msg.t_nv.data() < 1 )
                            {
                                /*Запись в журнал*/
                                archive( 21 );
                                vr.msg.t_nv.setData( 1 );
                            }
                        } else
                        {
                            vr.msg.t_nv.setData( 0 );
                        }
                    } else
                    {
                       display.temp.t_nv.setData( 0 );
                       if ( vr.msg.t_nv.data() < 1 )
                       {
                           /*Запись в журнал*/
                           archive( 21 );
                           vr.msg.t_nv.setData( 1 );
                       }
                    }
                }"
        },
        {
            "name":"setT_kotl",
            "sources":[
                "modbus.BVV.device",
                "modbus.BVV.r30005",
                "vr.msg.BVVConnError",
                "modbus.Tkotl.device",
                "modbus.Tkotl.r30000"
                ],
            "processing":"
                if ( settings.temp.useBVV.data() == 1 )
                {
                    if (modbus.BVV.device.data() == 1 )
                    {
                        display.temp.t_kotl.setData(
                            settings.offset.cmb.data()  *
                            (modbus.BVV.r30005.data()/settings.offset.oc.data())
                            + settings.offset.tb.data() );

                        if ( display.temp.t_kotl.data() >= settings.temp.sev.data() )
                        {
                            if ( vr.msg.t_kotl.data() < 1 )
                            {
                                /*Запись в журнал*/
                                archive( 22 );
                                vr.msg.t_kotl.setData( 1 );
                            }
                        } else
                        {
                            vr.msg.t_kotl.setData( 0 );
                        }
                    } else if ( vr.msg.BVVConnError.data() == 1 ){
                       display.temp.t_kotl.setData( 0 );
                       vr.msg.t_kotl.setData( 0 );
                    }
                } else
                {
                    if (modbus.Tkotl.device.data() == 1 )
                    {
                        display.temp.t_kotl.setData(
                            settings.offset.cmb_mb.data()  *
                            (modbus.Tkotl.r30000.data()/settings.offset.oc.data())
                            + settings.offset.tb_mb.data() );

                        if ( display.temp.t_kotl.data() >= settings.temp.sev.data() )
                        {
                            if ( vr.msg.t_kotl.data() < 1 )
                            {
                                /*Запись в журнал*/
                                archive( 22 );
                                vr.msg.t_kotl.setData( 1 );
                            }
                        } else
                        {
                            vr.msg.t_kotl.setData( 0 );
                        }
                    } else
                    {
                       display.temp.t_kotl.setData( 0 );
                       if ( vr.msg.t_kotl.data() < 1 )
                       {
                           /*Запись в журнал*/
                           archive( 22 );
                           vr.msg.t_kotl.setData( 1 );
                       }
                    }
                }"
        },
        {
                "name":"set_I_bat",
                "sources":[
                    "modbus.BVV.device",
                    "vr.msg.BVVConnError",
                    "modbus.BVV.r30006"
                    ],
                "processing":"
                if ( modbus.BVV.device.data() == 1 )
                {
                    display.U_I.I_bat.setData(
                        settings.offset.cmi.data() *
                        (modbus.BVV.r30006.data()/settings.offset.oc.data())
                       + settings.offset.cb.data() );
                } else  if ( vr.msg.BVVConnError.data() == 1 )
                {
                   display.U_I.I_bat.setData( 0 );
                }
                "
        },
        {
            "name":"set_I_gen",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30007"
                ],
            "processing":"
                if (modbus.BVV.device.data() == 1 )
                {
                    display.U_I.I_gen.setData(
                        settings.offset.cmg.data()  *
                        (modbus.BVV.r30007.data()/settings.offset.oc.data())
                       + settings.offset.cg.data() );
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.U_I.I_gen.setData( 0 );
                }
                "
        },
        {
            "name":"set_U_net",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30008"
                ],
            "processing":"
                if ( modbus.BVV.device.data() == 1 )
                {
                    display.U_I.U_net.setData(
                        settings.offset.cmv.data()  *
                        (modbus.BVV.r30008.data()/settings.offset.oc.data())
                       + settings.offset.nv.data() );
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.U_I.U_net.setData( 0 );
                }
                "
        },
        {
            "name":"set_u3000",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    /* Выводить сообщение на экран и в журнал нужно толко,
                       тогда когда 3000В нужно для включения ВВО */
                    if ( ( modbus.BVV.r30000.data() & 1 ) > 0 )
                    {
                        display.BVV.u3000.setData( 1 );

                        /*Скрываем сообщение*/
                        /*vr.msg.u3000Error.setData( 0 );*/
                    } else
                    {
                        if ( display.BVV.u3000.data() == 1 )
                        {
                            display.BVV.u3000.setData( 0 );

                            /*Выводим на экран сообщение*/
                            /*vr.msg.u3000Error.setData( 1 );*/

                            /*Запись в журнал*/
                            /*archive( 3 );*/
                        }
                    }
                } else if ( vr.msg.BVVConnError.data() == 1)
                {
                    display.BVV.u3000.setData( 0 );
                    /*Скрываем сообщение*/
                    /*vr.msg.u3000Error.setData( 0 );*/
                }
                "
        },
        {
            "name":"set_VVO_1",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if ( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30000.data() & 2 ) > 0 )
                    {
                        if ( display.BVV.VVO_1.data() == 0 )
                        {
                            display.BVV.VVO_1.setData( 1 );
                            /*Запись в журнал*/
                            if ( display.BVV.automode.data() == 1 )
                            {
                                archive( 60 );
                            } else
                            {
                                archive( 44 );
                            }
                        }
                    } else
                    {
                        if ( display.BVV.VVO_1.data() == 1 )
                        {
                            display.BVV.VVO_1.setData( 0 );
                            /*Запись в журнал*/
                            if ( display.BVV.automode.data() == 1 )
                            {
                                archive( 62 );
                            } else
                            {
                                archive( 46 );
                            }
                        }
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.VVO_1.setData( 0 );
                }
                "
        },
        {
            "name":"set_VVO_2",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30000.data() & 4 ) > 0 )
                    {
                        if ( display.BVV.VVO_2.data() == 0 )
                        {
                            display.BVV.VVO_2.setData( 1 );
                            /*Запись в журнал*/
                            if ( display.BVV.automode.data() == 1 )
                            {
                                archive( 61 );
                            } else
                            {
                                archive( 45 );
                            }
                        }
                    } else
                    {
                        if ( display.BVV.VVO_2.data() == 1 )
                        {
                            display.BVV.VVO_2.setData( 0 );
                            /*Запись в журнал*/
                            if ( display.BVV.automode.data() == 1 )
                            {
                                archive( 63 );
                            } else
                            {
                                archive( 47 );
                            }
                        }
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.VVO_2.setData( 0 );
                }
                "
        },
        {
            "name":"set_NVO",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30000.data() & 8 ) > 0 )
                    {
                        if ( display.BVV.NVO.data() == 0 )
                        {
                            display.BVV.NVO.setData( 1 );
                            /*Запись в журнал*/
                            if ( display.BVV.automode.data() == 1 )
                            {
                                archive( 12 );
                            } else
                            {
                                archive( 48 );
                            }
                        }
                    } else
                    {
                        if ( display.BVV.NVO.data() == 1 )
                        {
                            display.BVV.NVO.setData( 0 );
                            /*Запись в журнал*/
                            if ( display.BVV.automode.data() == 1 )
                            {
                                archive( 13 );
                            } else
                            {
                                archive( 49 );
                            }
                        }
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.NVO.setData( 0 );
                }
                "
        },
        {
            "name":"set_generator",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    display.BVV.generator.setData( ( modbus.BVV.r30000.data() & 16 ) > 0 );
                }else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.generator.setData(0);
                }
                "
        },

        {
            "name":"set_automodeTmp",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30000.data() & 32 ) > 0 )
                    {
                        vr.BVV.automode.setData( 1 );
                        vr.BVV.automodeTmpCmd.setData( 0 );
                    } else
                    {
                        /*Запоминаем состояние сигналов о включении НВО и ВВО1 и ВВО2*/
                        vr.BVV.automodeTmpCmd.setData( modbus.BVV.r30000.data() & 0x0E );

                        vr.BVV.automode.setData( 0 );
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    vr.BVV.automode.setData( 0 );
                    vr.BVV.automodeTmpCmd.setData( 0 );
                }
                "
        },

        {
            "name":"set_automode",
            "sources":[
                "vr.BVV.automode",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if ( vr.BVV.automode.data() > 0 )
                {
                    if ( display.BVV.automode.data() == 0 )
                    {
                        display.BVV.automode.setData( 1 );
                        /*Запись в журнал*/
                        archive( 16 );
                    }
                } else if ( ( modbus.BVV.r30000.data() & vr.BVV.automodeTmpCmd.data() )  == 0 )
                {
                    /* Отключаем индикацию автоматического режима только тогда, когда сняли все сигналы,
                       которые выдавались на момент выключения режима авто
                    */
                    if ( display.BVV.automode.data() == 1 )
                    {
                        display.BVV.automode.setData( 0 );
                        /*Запись в журнал*/
                        archive( 17 );
                    }
                }
                "
        },

        {
            "name":"set_crash",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30000.data() & 64 ) > 0 )
                    {
                        if ( display.BVV.crash.data() == 0 )
                        {
                            display.BVV.crash.setData( 1 );
                            /*Запись в журнал*/
                            archive( 20 );
                        }
                    } else
                    {
                        if ( display.BVV.crash.data() == 1 )
                        {
                            display.BVV.crash.setData( 0 );
                        }
                    }
                }else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.crash.setData(0);
                }"
        },
        {
            "name":"set_elEquipmentOn",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30000.data() & 128 ) > 0 )
                    {
                        display.BVV.elEquipmentOn.setData( 1 );
                    } else
                    {
                        display.BVV.elEquipmentOn.setData( 0 );
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.elEquipmentOn.setData(0);
                }"
        },
        {
            "name":"set_condFailure",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30000.data() & 256 ) > 0 )
                    {
                        if ( display.BVV.condFailure.data() == 0 )
                        {
                            display.BVV.condFailure.setData( 1 );
                            /*Запись в журнал*/
                            archive( 27 );
                        }
                    } else
                    {
                        if ( display.BVV.condFailure.data() == 1 )
                        {
                            display.BVV.condFailure.setData( 0 );
                            /*Запись в журнал*/
                            archive( 28 );
                        }
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.condFailure.setData(0);
                }"
        },
        {
            "name":"set_cont2Failure",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30000.data() & 512 ) > 0 )
                    {
                        if ( display.BVV.cont2Failure.data() == 0 )
                        {
                            display.BVV.cont2Failure.setData( 1 );
                            /*Запись в журнал*/
                            archive( 33 );
                        }
                    } else
                    {
                        if ( display.BVV.cont2Failure.data() == 1 )
                        {
                            display.BVV.cont2Failure.setData( 0 );
                            /*Запись в журнал*/
                            archive( 34 );
                        }
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.cont2Failure.setData(0);
                }"
        },
        {
            "name":"set_cont1Failure",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30000.data() & 1024 ) > 0 )
                    {
                        if ( display.BVV.cont1Failure.data() == 0 )
                        {
                            display.BVV.cont1Failure.setData( 1 );
                            /*Запись в журнал*/
                            archive( 31 );
                        }
                    } else
                    {
                        if ( display.BVV.cont1Failure.data() == 1 )
                        {
                            display.BVV.cont1Failure.setData( 0 );
                            /*Запись в журнал*/
                            archive( 32 );
                        }
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.cont1Failure.setData(0);
                }"
        },
        {
            "name":"set_condWorked",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30000.data() & 2048 ) > 0 )
                    {
                        if ( display.BVV.condWorked.data() == 0 )
                        {
                            display.BVV.condWorked.setData( 1 );
                            /*Запись в журнал*/
                            archive( 29 );
                        }
                    } else
                    {
                        if ( display.BVV.condWorked.data() == 1 )
                        {
                            display.BVV.condWorked.setData( 0 );
                            /*Запись в журнал*/
                            archive( 30 );
                        }
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.condWorked.setData(0);
                }"
        },                
        {
            "name":"set_cooling",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30000.data() & 4096 ) > 0 )
                    {
                        if ( display.BVV.cooling.data() == 0 )
                        {
                            display.BVV.cooling.setData( 1 );
                            /*Запись в журнал*/
                            if ( display.BVV.automode.data() == 1 )
                            {
                                archive( 35 );
                            } else
                            {
                                archive( 66 );
                            }
                        }
                    } else
                    {
                        if ( display.BVV.cooling.data() == 1 )
                        {
                            display.BVV.cooling.setData( 0 );
                            /*Запись в журнал*/
                            if ( display.BVV.automode.data() == 1 )
                            {
                                archive( 36 );
                            } else
                            {
                                archive( 67 );
                            }
                        }
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.cooling.setData(0);
                }
                "
        },
        {
            "name":"set_heater",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30000.data() & 8192 ) > 0 )
                    {
                        if ( display.BVV.heater.data() == 0 )
                        {
                            display.BVV.heater.setData( 1 );
                            /*Запись в журнал*/
                            archive( 37 );
                        }
                    } else
                    {
                        if ( display.BVV.heater.data() == 1 )
                        {
                            display.BVV.heater.setData( 0 );
                            /*Запись в журнал*/
                            archive( 38 );
                        }
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.heater.setData(0);
                }"
        },
        {
            "name":"set_umax_zrk",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( (modbus.BVV.r30000.data() & 16384 ) > 0)
                    {
                        if ( display.BVV.umax_zrk.data() == 0 )
                        {
                            display.BVV.umax_zrk.setData( 1 );
                            /*Запись в журнал*/
                            /*В ТЗ запис 'Umax ЗРК=ХХХ В', но аварию получайм по дискретнику,
                              а в параметр что-то нужно передавать. Поэтому передаем настройку
                              по которой выдаем Umax БВВ.
                            */
                            archive( 6, settings.volt.mabn.data() );
                        }
                    } else
                    {
                        display.BVV.umax_zrk.setData( 0 );
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.umax_zrk.setData( 0 );
                }
                "
        },
        {
            "name":"set_r_insulation",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30000"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30000.data() & 32768 ) > 0 )
                    {
                        if ( display.BVV.r_insulation.data() == 0 )
                        {
                            display.BVV.r_insulation.setData( 1 );
                            /*Запись в журнал*/
                            archive( 7 );
                        }
                    } else
                    {
                        display.BVV.r_insulation.setData( 0 );
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.r_insulation.setData( 0 );
                }
                "
        },
        {
            "name":"set_ventilation",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r30001"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    if ( ( modbus.BVV.r30001.data() & 1 ) > 0 )
                    {
                        if ( display.BVV.ventilation.data() == 0 )
                        {
                            display.BVV.ventilation.setData( 1 );
                            /*Запись в журнал*/
                            if ( display.BVV.automode.data() == 1 )
                            {
                                archive( 58 );
                            } else {
                                archive( 64 );
                            }
                        }
                    } else
                    {
                        if ( display.BVV.ventilation.data() == 1 )
                        {
                            display.BVV.ventilation.setData( 0 );
                            /*Запись в журнал*/
                            if ( display.BVV.automode.data() == 1 )
                            {
                                archive( 59 );
                            } else {
                                archive( 65 );
                            }
                        }
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.ventilation.setData( 0 );
                }
                "
        },
        {
            "name":"set_BVV_version",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r40028"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    display.BVV.version.setData(modbus.BVV.r40028.data());
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.version.setData(0);
                }"
        },
        {
            "name":"set_BVV_version_year",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r40029"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    display.BVV.year.setData(modbus.BVV.r40029.data());
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.year.setData(0);
                }"
        },
        {
            "name":"set_BVV_version_month",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r40030"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 ){
                    display.BVV.month.setData(modbus.BVV.r40030.data());
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    display.BVV.month.setData(0);
                }
                "
        },
        {
            "name":"set_BVV_version_day",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "modbus.BVV.r40031"
                ],
            "processing":"
                if( modbus.BVV.device.data() == 1 )
                {
                    display.BVV.day.setData(modbus.BVV.r40031.data());
                } else if ( vr.msg.BVVConnError.data() == 1)
                {
                    display.BVV.day.setData(0);
                }"
        },
        {
            "name":"setAutomodeDisabled",
            "sources":[
                "vr.temp.vvo1ResponseError",
                "vr.temp.vvo2ResponseError",
                "vr.temp.nvoResponseError",
                "vr.kotl.overheat",
                "vr.msg.t_nv",
                "vr.msg.t_sal",
                "vr.msg.t_pr",
                "vr.msg.t_kotl",
                "display.BVV.automode"
                ],
            "processing":"
                var errorVvo = 0;
                var errorNvo = 0;
                var errorManual = 0;

                if (   vr.msg.t_nv.data() == 1
                    || vr.msg.t_sal.data() == 1
                    || vr.msg.t_pr.data() == 1
                    || vr.msg.t_kotl.data() == 1 )
                {
                    if( display.BVV.automode.data() == 1 )
                    {
                        errorVvo = 1;
                        errorNvo = 1;
                    } else
                    {
                        errorManual = 1;
                    }


                }

                if(    vr.temp.vvo1ResponseError.data() == 1
                    && vr.temp.vvo2ResponseError.data() == 1 )
                {
                    errorVvo = 1;
                }

                if( vr.temp.nvoResponseError.data() == 1 )
                {
                    errorNvo = 1;
                }

                vr.msg.automodeDisabledVvo.setData( errorVvo );
                vr.msg.automodeDisabledNvo.setData( errorNvo );
                vr.msg.automodeDisabledManual.setData( errorManual )

                if( ( errorVvo == 1 && errorNvo == 1 )
                    || vr.kotl.overheat.data() == 1
                  )
                {
                    vr.msg.automodeDisabled.setData( 1 );
                }else{
                    vr.msg.automodeDisabled.setData( 0 );
                }
                "
        },
        {
            "name":"setManualModeOn",
            "sources":[
                "display.BVV.VVO_1",
                "display.BVV.VVO_2",
                "display.BVV.NVO",
                "display.BVV.ventilation",
                "display.BVV.automode"
                ],
            "processing":"
                   if(    display.BVV.automode.data() == 0
                        && (    display.BVV.VVO_1.data() == 1
                             || display.BVV.VVO_2.data() == 1
                             || display.BVV.NVO.data() == 1
                             || display.BVV.ventilation.data() == 1 )
                    )
                    {
                        if ( vr.msg.manualModeOn.data() == 0 )
                        {
                            vr.msg.manualModeOn.setData( 1 );
                            /*Запись в журнал*/
                            archive( 52 );
                        }
                    } else
                    {
                        if ( vr.msg.manualModeOn.data() == 1 )
                        {
                            vr.msg.manualModeOn.setData( 0 );
                            /*Запись в журнал*/
                            archive( 53 );
                        }
                    }
                "
        },
        {
            "name":"checkNVO_On",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "vr.BVV.automode",
                "vr.msg.automodeDisabled",
                "vr.temp.nvoResponseError",
                "display.BVV.generator",
                "display.temp.t_nv",
                "display.temp.t_sal",
                "settings.temp.sut",
                "display.BVV.cooling",
                "display.BVV.condWorked" ],
            "processing":"
                if ( modbus.BVV.device.data() == 1 )
                {
                    if (     ( vr.BVV.automode.data() == 1 )
                          && ( vr.msg.automodeDisabled.data() == 0 )
                          && ( vr.temp.nvoResponseError.data() == 0 )
                          && ( display.BVV.generator.data() == 1 )
                          && ( display.temp.t_nv.data() < ( settings.temp.onnvo.data()
                                                         - settings.temp.onlvhd.data() ) )
                          && ( display.temp.t_sal.data() < (settings.temp.sut.data() - 2) )
                          && ( display.BVV.cooling.data() == 0)    )
                     {
                        if ( settings.cond.ccm.data() == 1 ) {
                            vr.temp.nvoOn.setData( 1 );
                        } else if  (display.BVV.condWorked.data() == 0 ){
                            vr.temp.nvoOn.setData( 1 );
                        } else {
                            vr.temp.nvoOn.setData( 0 );
                        }
                    } else {
                        vr.temp.nvoOn.setData( 0 );
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    vr.temp.nvoOn.setData( 0 );
                }"
         },
         {
             "name":"delayNVO_On",
             "sources":[ "sys.time.curent" ],
             "processing":"

                if ( display.BVV.automode.data() == 0 )
                {
                    vr.temp.nvoFirst.setData( 0 );
                    vr.temp.nvoResponseError.setData( 0 );
                    vr.timout.nvoResponseTime.setData( 0 );
                }

                if ( vr.temp.nvoOn.data() == 1 && out.BVV.nvoOn.data() == 0 )
                {
                    if ( vr.temp.nvoFirst.data() == 0 )
                    {
                        if ( vr.timout.dlhon.data() == 0 )
                        {
                            vr.timout.dlhon.setData( sys.time.curent.data() +
                                                      settings.delay.dlhon.data()
                                                     );
                        }

                        if ( sys.time.curent.data() >= vr.timout.dlhon.data() )
                        {
                            out.BVV.nvoOn.setData( 1 );
                            vr.temp.nvoFirst.setData( 1 );
                            vr.timout.nvoResponseTime.setData(
                                                sys.time.curent.data() +
                                                settings.delay.dlhr.data() );
                        }
                    } else {
                        if ( vr.timout.dlhon.data() == 0 )
                        {
                            vr.timout.dlhon.setData( sys.time.curent.data() +
                                                + 60 +
                                                settings.delay.dlh.data() +
                                                settings.delay.dlhon.data() );
                        }

                        if ( sys.time.curent.data() >= vr.timout.dlhon.data() )
                        {
                            out.BVV.nvoOn.setData( 1 );
                            vr.timout.nvoResponseTime.setData(
                                                sys.time.curent.data() +
                                                settings.delay.dlhr.data() );
                        }
                    }
                } else
                {
                    if ( vr.temp.nvoOn.data() == 0 && out.BVV.nvoOn.data() == 0 )
                    {
                        vr.timout.dlhon.setData( 0 );
                        vr.timout.nvoResponseTime.setData( 0 );
                    }
                }

                if ( vr.timout.nvoResponseTime.data() > 0 )
                {
                    if ( display.BVV.NVO.data() > 0 )
                    {
                        if ( sys.time.curent.data() < vr.timout.nvoResponseTime.data() )
                        {
                            vr.temp.nvoResponseError.setData( 0 );
                            vr.timout.nvoResponseTime.setData( 0 );
                        }
                    } else
                    {
                        if ( sys.time.curent.data() >= vr.timout.nvoResponseTime.data() )
                        {
                            if ( vr.temp.nvoResponseError.data() == 0 )
                            {
                                /*Запись в журнал*/
                                archive( 40 );
                                vr.temp.nvoResponseError.setData( 1 );
                                vr.timout.nvoResponseTime.setData( 0 );
                            }
                        }
                    }
                }"
        },
        {
            "name":"checkNVO_Off",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "vr.BVV.automode",
                "vr.msg.automodeDisabled",
                "display.BVV.generator",
                "display.temp.t_nv",
                "display.temp.t_sal",
                "settings.temp.sut",
                "display.BVV.cooling",
                "display.BVV.condWorked"
                ],
            "processing":"
                if ( modbus.BVV.device.data() == 1 )
                {
                    if (      ( vr.BVV.automode.data() == 0 )
                           || ( vr.msg.automodeDisabled.data() == 1 )
                           || ( vr.temp.nvoResponseError.data() == 1 )
                           || ( display.BVV.generator.data()== 0 )
                           || ( display.temp.t_nv.data() >=  ( settings.temp.offnvo.data()
                                                            +  settings.temp.offlvhd.data() ) )
                           || ( display.temp.t_sal.data() > (settings.temp.sut.data()  + 1) )
                           || ( display.BVV.cooling.data() == 1) )
                    {
                        vr.temp.nvoOff. setData( 1 );
                    } else if (    settings.cond.ccm.data() == 0
                                && display.BVV.condWorked.data() == 1 )
                    {
                        vr.temp.nvoOff.setData( 1 );
                    } else {
                        vr.temp.nvoOff.setData( 0 );
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    vr.temp.nvoOff.setData( 1 );
                }"
       },

       {
            "name":"delayNVO_Off",
            "sources":[ "sys.time.curent" ],
            "processing":"
                if (vr.temp.nvoOff.data() == 1 && out.BVV.nvoOn.data() == 1 )
                {
                    if (vr.timout.dlhoff.data() > 0 )
                    {
                       if ( sys.time.curent.data() >= vr.timout.dlhoff.data() )
                       {
                            out.BVV.nvoOn.setData( 0 );
                       }
                    } else {
                        vr.timout.dlhoff.setData( sys.time.curent.data() +
                                                   settings.delay.dlhoff.data() );
                    }
                } else
                {
                    vr.timout.dlhoff.setData( 0 );
                }"
       },


       {
           "name":"checkKotlOverheat",
           "sources":[
               "sys.time.curent"
               ],
           "processing":"
               /*
               Дополнительно, не зависимо от того включена климатическая установка или
               нет (т.е. даже при отсутствии включения АР или РР), должна контролироваться
               температура воды в котле.
               При температуре tкотла >= +ХХС в течение >= ХХсек работа ВВО в
               автоматическом режиме должна быть запрещена (дискретные выходы - биты «0»,
               «1», «2» регистра 9 установить в состояние откл (0)).
               В случае, если данное событие произошло, должна быть произведена запись в
               соответствующий журнал («журнал климатической установки авто» - при включенном
               АР и «журнал климатической установки ручной» - при включенном РР) и выведено
               сообщение на главный экран.
               Значение температуры +ХХС и задержки ХХсек (0...30)сек устанавливается из
               сервисного меню.
               */
               if ( modbus.BVV.device.data() == 1 )
               {
                   if (    display.temp.t_kotl.data() >= settings.temp.bt.data()
                        && vr.msg.t_kotl.data() == 0 )
                   {
                       if ( vr.kotl.time.data() == 0 )
                       {
                           /*Запуск счетчика аварии*/
                           vr.kotl.time.setData(   sys.time.curent.data()
                                                   + settings.temp.ibt.data() );
                       } else if ( sys.time.curent.data() >= vr.kotl.time.data() )
                       {
                            /*Запись в журнал и вывод на экран*/
                            if ( vr.kotl.overheat.data() == 0 )
                            {
                                vr.kotl.overheat.setData( 1 );
                                if ( vr.BVV.automode.data() == 1 )
                                {
                                    archive( 2, settings.temp.bt.data() );
                                } else
                                {
                                    archive( 43, settings.temp.bt.data() );
                                }
                            }
                       }
                   } else
                   {
                       vr.kotl.time.setData( 0 );
                       vr.kotl.overheat.setData( 0 );
                   }
               }
               "
        },
        {
             "name":"setVvoKotlOn",
             "sources":[
                "modbus.BVV.device",
                "settings.temp.sut",
                "display.temp.t_nv",
                "display.temp.t_sal"
                ],
             "processing":"
                 if ( modbus.BVV.device.data() == 1 )
                 {
                     vr.temp.vvokotlon.setData(
                         settings.temp.x0.data() + settings.temp.x2.data() *
                         ( settings.temp.sut.data() - settings.temp.x3.data() ) -
                         settings.temp.x4.data() * display.temp.t_nv.data() +
                         settings.temp.x5.data() *
                         ( settings.temp.sut.data() - display.temp.t_sal.data() )
                     );
                 }
                 "
        },
        {
             "name":"setVvoKotlOff",
             "sources":[
                "modbus.BVV.device",
                "settings.temp.sut",
                "display.temp.t_nv",
                "display.temp.t_sal"
                ],
             "processing":"
                 if ( modbus.BVV.device.data() == 1 )
                 {
                     vr.temp.vvokotloff.setData(
                         settings.temp.x1.data() + settings.temp.x2.data() *
                         ( settings.temp.sut.data() - settings.temp.x3.data() ) -
                         settings.temp.x4.data() * display.temp.t_nv.data() +
                         settings.temp.x5.data() *
                         (settings.temp.sut.data() - display.temp.t_sal.data() )
                     );
                 }
                 "
        },



        {
            "name":"checkVVO_On",
            "sources":[
                "modbus.BVV.device",
                "vr.BVV.automode",
                "vr.msg.automodeDisabled",
                "vr.temp.vvo1ResponseError",
                "vr.temp.vvo2ResponseError",
                "vr.kotl.overheat",
                "display.BVV.u3000",
                "settings.temp.sut",
                "display.temp.t_nv",
                "display.temp.t_sal",
                "display.temp.t_kotl",
                "display.BVV.cooling" ],
            "processing":"
                /* При отсутвии 3000В нужно выводить сообщение о его отсутствии на экран и журнал*/
                if ( modbus.BVV.device.data() == 1 )
                {
                    /*Востанавливаем состояние, которое было до потери связи*/
                    if ( vr.msg.u3000ErrorTemp.data( ) == 1 )
                    {
                        vr.msg.u3000Error.setData( 1 );
                    }

                    if (    ( vr.BVV.automode.data() == 1 )
                         && ( vr.msg.automodeDisabled.data() == 0 )
                         && (    vr.temp.vvo1ResponseError.data() == 0
                              || vr.temp.vvo2ResponseError.data() == 0 )
                         && ( vr.kotl.overheat.data() == 0 )
                         /* && ( display.BVV.u3000.data()  == 1 ) */
                         && ( display.temp.t_sal.data() < ( settings.temp.sut.data() -
                                                            settings.temp.vvohefon.data() ) )
                         && ( display.BVV.cooling.data() == 0)
                         && ( display.temp.t_kotl.data() < vr.temp.vvokotlon.data() ) )
                    {

                        if ( display.BVV.u3000.data()  == 1 )
                        {

                            if ( vr.msg.u3000Error.data( ) == 1 )
                            {
                                vr.msg.u3000Error.setData( 0 );
                                vr.msg.u3000ErrorTemp.setData( 0 );
                            }

                            if ( display.temp.t_nv.data() <= settings.temp.vvohoton.data() )
                            {
                                vr.temp.vvo1On.setData( 1 );
                                if (display.temp.t_nv.data() < settings.temp.vvootfdon.data() )
                                {
                                    vr.temp.vvo2On.setData( 1 );
                                }
                            }
                        } else
                        {
                            /*Выводим на экран сообщение*/
                            if ( vr.msg.u3000Error.data( ) != 1 )
                            {
                                vr.msg.u3000Error.setData( 1 );
                                vr.msg.u3000ErrorTemp.setData( 1 );
                                /*Запись в журнал*/
                                archive( 3 );
                            }
                        }
                    } else
                    {
                        vr.msg.u3000Error.setData( 0 );
                        vr.msg.u3000ErrorTemp.setData( 0 );
                    }
                } else if ( vr.msg.BVVConnError.data( ) == 1 )
                {
                    /*Если пропала связь, кроме этой информации на экране ничего не должно быть,
                      поэтому скрываем надпись, по потом востановим */
                    vr.msg.u3000Error.setData( 0 );
                }
                "
        },
        {
            "name":"checkVVO_Off",
            "sources":[
                "modbus.BVV.device",
                "vr.msg.BVVConnError",
                "vr.BVV.automode",
                "vr.msg.automodeDisabled",
                "vr.temp.vvo1ResponseError",
                "vr.temp.vvo2ResponseError",
                "vr.kotl.overheat",
                "display.BVV.u3000",
                "settings.temp.sut",
                "display.temp.t_nv",
                "display.temp.t_sal",
                "display.temp.t_kotl",
                "display.BVV.cooling" ],
            "processing":"
            /* При наличии 3000В или отсутсвия условий для включения ВВО нужно скрывать сообщение сообщение о его отсутствии с экрана*/
                if ( modbus.BVV.device.data() == 1 )
                {
                    if (     ( vr.BVV.automode.data() == 0 )
                          || ( vr.msg.automodeDisabled.data()  == 1 )
                          || (    vr.temp.vvo1ResponseError.data() == 1
                               && vr.temp.vvo2ResponseError.data() == 1 )

                          || ( display.BVV.u3000.data()  == 0 )
                          || ( display.temp.t_sal.data() > ( settings.temp.sut.data() +
                                                             settings.temp.vvohefoff.data() ) )
                          || ( display.BVV.cooling.data() == 1 )
                          || ( display.temp.t_kotl.data() >= vr.temp.vvokotlon.data() )
                          || ( display.temp.t_nv.data() > settings.temp.vvohotoff.data() )
                       )
                    {
                        vr.temp.vvo1On.setData( 0 );
                        vr.temp.vvo2On.setData( 0 );
                    }else{
                        if (    display.temp.t_nv.data() > settings.temp.vvootfdoff.data()
                             || vr.temp.vvo1ResponseError.data() == 1
                             || vr.temp.vvo2ResponseError.data() == 1 )
                        {
                            vr.temp.vvo2On.setData( 0 );
                        }
                    }


                    /*Если решили выключить ВВО, но при этом 3000В есть, гасим сообщение*/
                    if ( vr.temp.vvo1On.data( ) == 0 && display.BVV.u3000.data() == 1 )
                    {
                        vr.temp.vvo2On.setData( 0 );
                    }

                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    vr.temp.vvo1On.setData( 0 );
                    vr.temp.vvo2On.setData( 0 );
                }"
        },
        {
            "name":"delayVVO_On",
            "sources":[ "sys.time.curent" ],
            "processing":"
                if ( display.BVV.automode.data() == 0 )
                {
                    vr.temp.vvoFirst.setData( 0 );
                    vr.temp.vvo1ResponseError.setData( 0 );
                    vr.temp.vvo2ResponseError.setData( 0 );
                    vr.timout.vvo1ResponseTime.setData( 0 );
                    vr.timout.vvo2ResponseTime.setData( 0 );
                }

                if ( vr.temp.vvo1On.data() == 1 && vr.temp.vvoOn.data() == 0 )
                {
                    if ( vr.temp.vvoFirst.data() == 0 )
                    {
                        if ( vr.timout.vvosod.data() == 0 )
                        {
                            vr.timout.vvosod.setData( sys.time.curent.data() +
                                                  settings.delay.vvosod.data()
                                                  );
                        }

                        if ( sys.time.curent.data() >= vr.timout.vvosod.data() )
                        {
                            vr.temp.vvoOn.setData( 1 );
                            vr.temp.vvoFirst.setData( 1 );
                        }
                    } else {
                        if ( vr.timout.vvosod.data() == 0 )
                        {
                            vr.timout.vvosod.setData( sys.time.curent.data() +
                                                  + 120 +
                                                  settings.delay.vvodsd.data() +
                                                  settings.delay.vvosod.data()
                                                  );
                        }

                        if ( sys.time.curent.data() >= vr.timout.vvosod.data() )
                        {
                            vr.temp.vvoOn.setData( 1 );
                        }
                    }
                } else
                {
                    if ( vr.temp.vvo1On.data() == 0 && vr.temp.vvoOn.data() == 1 )
                    {
                        vr.temp.vvoOn.setData( 0 );
                    }

                    vr.timout.vvosod.setData( 0 );
                }


                if ( vr.temp.vvoOn.data() == 1 )
                {
                    if (    vr.temp.vvo1ResponseError.data( ) == 0
                         && vr.temp.vvo2ResponseError.data( ) == 0)
                    {
                        if ( vr.temp.vvoInvert.data() == 0 )
                        {
                            if ( vr.temp.vvo1On.data() == 1 )
                            {
                                if ( out.BVV.vvo1On.data() == 0 )
                                {
                                    out.BVV.vvo1On.setData( 1 );
                                    vr.timout.vvo1ResponseTime.setData(
                                                      sys.time.curent.data() +
                                                      settings.delay.vvord.data() );
                                }
                            } else
                            {
                                if ( out.BVV.vvo1On.data() == 1 )
                                {
                                    out.BVV.vvo1On.setData( 0 );
                                    vr.timout.vvo1ResponseTime.setData( 0 );
                                }
                            }
                            if ( vr.temp.vvo2On.data() == 1 )
                            {
                                if ( out.BVV.vvo2On.data() == 0 )
                                {
                                    out.BVV.vvo2On.setData( 1 );
                                    vr.timout.vvo2ResponseTime.setData(
                                                      sys.time.curent.data() +
                                                      settings.delay.vvord.data() );
                                }
                            } else
                            {
                                if ( out.BVV.vvo2On.data() == 1 )
                                {
                                    out.BVV.vvo2On.setData( 0 );
                                    vr.timout.vvo2ResponseTime.setData( 0 );
                                }
                            }
                        } else {
                            if ( vr.temp.vvo2On.data() == 1 )
                            {
                                if ( out.BVV.vvo1On.data() == 0 )
                                {
                                    out.BVV.vvo1On.setData( 1 );
                                    vr.timout.vvo1ResponseTime.setData(
                                                      sys.time.curent.data() +
                                                      settings.delay.vvord.data() );
                                }
                            } else
                            {
                                if ( out.BVV.vvo1On.data() == 1 )
                                {
                                    out.BVV.vvo1On.setData( 0 );
                                    vr.timout.vvo1ResponseTime.setData( 0 );
                                }
                            }
                            if ( vr.temp.vvo1On.data() == 1 )
                            {
                                if ( out.BVV.vvo2On.data() == 0 )
                                {
                                    out.BVV.vvo2On.setData( 1 );
                                    vr.timout.vvo2ResponseTime.setData(
                                                      sys.time.curent.data() +
                                                      settings.delay.vvord.data() );
                                }
                            } else
                            {
                                if ( out.BVV.vvo2On.data() == 1 )
                                {
                                    out.BVV.vvo2On.setData( 0 );
                                    vr.timout.vvo2ResponseTime.setData( 0 );
                                }
                            }
                        }

                        /*Запись в журнал*/
                        if ( out.BVV.pompOn.data( ) != vr.temp.vvo2On.data() )
                        {
                            if ( vr.temp.vvo2On.data() > 0 )
                            {
                                archive( 14 );
                            } else {
                                archive( 15 );
                            }
                        }

                        out.BVV.pompOn.setData( vr.temp.vvo2On.data() );

                    } else if ( vr.temp.vvo1ResponseError.data( ) == 0 ) {
                        if ( out.BVV.vvo1On.data() == 0 && vr.temp.vvo1On.data() == 1 )
                        {
                            out.BVV.vvo1On.setData( 1 );
                            vr.timout.vvo1ResponseTime.setData(
                                              sys.time.curent.data() +
                                              settings.delay.vvord.data() );
                        }
                        out.BVV.vvo2On.setData( 0 );

                        /*Запись в журнал*/
                        if ( out.BVV.pompOn.data( ) > 0 )
                        {
                            archive( 15 );
                        }

                        out.BVV.pompOn.setData( 0 );
                    } else if ( vr.temp.vvo2ResponseError.data( ) == 0 ) {
                        if ( out.BVV.vvo2On.data() == 0 && vr.temp.vvo1On.data() == 1 )
                        {
                            out.BVV.vvo2On.setData( 1 );
                            vr.timout.vvo2ResponseTime.setData(
                                              sys.time.curent.data() +
                                              settings.delay.vvord.data() );
                        }
                        out.BVV.vvo1On.setData( 0 );

                        /*Запись в журнал*/
                        if ( out.BVV.pompOn.data( ) > 0 )
                        {
                            archive( 15 );
                        }

                        out.BVV.pompOn.setData( 0 );
                    } else {
                        out.BVV.vvo1On.setData( 0 );
                        out.BVV.vvo2On.setData( 0 );

                        /*Запись в журнал*/
                        if ( out.BVV.pompOn.data( ) > 0 )
                        {
                            archive( 15 );
                        }

                        out.BVV.pompOn.setData( 0 );
                    }
                } else {
                    if ( out.BVV.vvo1On.data() == 1 || out.BVV.vvo2On.data() == 1 )
                    {
                        if (    vr.temp.vvo1ResponseError.data( ) == 0
                             && vr.temp.vvo2ResponseError.data( ) == 0)
                        {
                            if ( vr.temp.vvoInvert.data() == 0 )
                            {
                                vr.temp.vvoInvert.setData( 1 );
                            } else {
                                vr.temp.vvoInvert.setData( 0 );
                            }
                        }
                    }
                    out.BVV.vvo1On.setData( 0 );
                    out.BVV.vvo2On.setData( 0 );

                    /*Запись в журнал*/
                    if ( out.BVV.pompOn.data( ) > 0 )
                    {
                        archive( 15 );
                    }

                    out.BVV.pompOn.setData( 0 );

                    /*При выключении сбрасываем время ожидания ответа, поскольку когда отключим ВВО,
                    а это время не сбросится получим ошибку овета*/
                    vr.timout.vvo1ResponseTime.setData( 0 );
                    vr.timout.vvo2ResponseTime.setData( 0 );
                }

                if ( vr.timout.vvo1ResponseTime.data() > 0 )
                {
                    if ( display.BVV.VVO_1.data() > 0 )
                    {
                        if ( sys.time.curent.data() < vr.timout.vvo1ResponseTime.data() )
                        {
                            vr.temp.vvo1ResponseError.setData( 0 );
                            vr.timout.vvo1ResponseTime.setData( 0 );
                        }
                    } else
                    {
                        if ( sys.time.curent.data() >= vr.timout.vvo1ResponseTime.data() )
                        {
                            if ( vr.temp.vvo1ResponseError.data() == 0 )
                            {
                                /*Запись в журнал*/
                                archive( 41 );
                                vr.temp.vvo1ResponseError.setData( 1 );
                                vr.timout.vvo1ResponseTime.setData( 0 );
                            }
                        }
                    }
                }

                if ( vr.timout.vvo2ResponseTime.data() > 0 )
                {
                    if ( display.BVV.VVO_2.data() > 0 )
                    {
                        if ( sys.time.curent.data() < vr.timout.vvo2ResponseTime.data() )
                        {
                            vr.temp.vvo2ResponseError.setData( 0 );
                            vr.timout.vvo2ResponseTime.setData( 0 );
                        }
                    } else
                    {
                        if ( sys.time.curent.data() >= vr.timout.vvo2ResponseTime.data() )
                        {
                            if ( vr.temp.vvo2ResponseError.data() == 0 )
                            {
                                /*Запись в журнал*/
                                archive( 42 );
                                vr.temp.vvo2ResponseError.setData( 1 );
                                vr.timout.vvo2ResponseTime.setData( 0 );
                            }
                        }
                    }
                }"
        },       
        {
            "name":"checkImaxBat",
            "sources":[ "sys.time.curent" ],
            "processing":"
                /*I max батареї ХХХ А - електрообладнання*/
                /*
                    При токе Iбат >= +XХА - запись в журнал «Високий струм заряду батареї ХХА» и
                отображение на главном экране «Високий струм». Если в течение Т>=Xсек значение
                тока не стало <+XХA - электрооборудование переводится в режим АВАРИЯ.
                    Значение +XХА (70...120)А - устанавливается из сервисного меню;
                    Значение Xсек (10...120) секунд устанавливается из сервисного меню.
                display.U_I.I_bat - Ток батареи
                settings.bat.mcb - Максимальний струм батареї, А
                settings.bat.imcb - Iнтервал перевищення струму батареї, мСек
                vr.timout.ImaxBat - Время на протяжении которого принимается решение о аварийном состоянии и выдачи сигнала Авария.
                vr.msg.ImaxBat - «Высвечивать или не высвечивать сообщение 'Високий струм'».
                */
                if ( modbus.BVV.device.data() == 1 )
                {
                    if ( display.U_I.I_bat.data() >= settings.bat.mcb.data() )
                    {
                        if ( vr.timout.ImaxBat.data() == 0 )
                        {
                            /*Запуск счетчика аварии*/
                            vr.timout.ImaxBat.setData(   sys.time.curent.data()
                                                    + settings.bat.imcb.data() );
                        } else if ( sys.time.curent.data() >= vr.timout.ImaxBat.data() )
                        {
                            /*Запись в журнал*/
                            if ( vr.msg.ImaxBat.data() == 0 )
                            {
                                archive( 1, display.U_I.I_bat.data() );
                                vr.msg.ImaxBat.setData( 1 );
                            }
                        }
                    } else
                    {
                        vr.timout.ImaxBat.setData( 0 );
                        vr.msg.ImaxBat.setData( 0 );
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    vr.timout.ImaxBat.setData( 0 );
                    vr.msg.ImaxBat.setData( 0 );
                }
                "
        },
        {
            "name":"checkUmaxBVV",
            "sources":[ "sys.time.curent" ],
            "processing":"
                /*4 Umax БВВ=%3.0f В - електрообладнання*/
                /*
                б) Umax БВВ=ХХХВ (измеренное значение) :
                    - анализ напряжения бортовой сети БИУ: если в течение 2сек измеренное
                значение Umax > 145В - электрооборудование переводится в режим АВАРИЯ и
                производится запись в соответсвующий журнал, на главный экран выводится
                сообщение «ВИСОКА НАПРУГА» .
                    «Umax БВВ=ХХХВ” (где ХХХВ - измеренное напряжение) - запись в Log файл
                измеренного значения с выводом на экран сообщения «Висока напруга» и в журнал
                «Umax БВВ=ХХХ».
                    Налаштування для бортовий мережі
                mabn        145     - максимальна напруга бортової  мережі, V
                maibn       2       - інтервал перевищення напруги бортової мережі, Сек
                */
                if ( modbus.BVV.device.data() == 1 )
                {
                    if ( display.U_I.U_net.data() >= settings.volt.mabn.data() )
                    {
                        if ( vr.timout.Umax.data() == 0 )
                        {
                            /*Запуск счетчика аварии*/
                            vr.timout.Umax.setData(   sys.time.curent.data()
                                                    + settings.volt.maibn.data() );
                        } else if ( sys.time.curent.data() >= vr.timout.Umax.data() )
                        {
                            /*Запись в журнал и вывод на экран*/
                            if ( vr.msg.Umax.data() == 0 )
                            {
                                archive( 4, display.U_I.U_net.data() );
                                vr.msg.Umax.setData( 1 );
                            }
                        } else
                        {
                        }
                    } else
                    {
                        vr.timout.Umax.setData( 0 );
                        vr.msg.Umax.setData( 0 );
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    vr.timout.Umax.setData( 0 );
                    vr.msg.Umax.setData( 0 );
                }
                "
        },
        {
            "name":"checkUminAB",
            "sources":[ "sys.time.curent" ],
            "processing":"
                /*26 Umin АБ=ХХ В - електрообладнання*/
                /*
                в) Umin АБ=YYYВ:
                    - если измеренное напряжение Uсети < YYYВ в течение > ZZZсек - электрооборудование
                переводится в режим АВАРИЯ и производится запись в соответсвующий журнал «Umin АБ=YYY»,
                на главный экран выводится сообщение «Батарея розряджена».
                Значение +YYYВ (60...100)В - устанавливается из сервисного меню.
                Значение ZZZ (10...120)сек - устанавливается из сервисного меню.
                    Налаштування для бортовий мережі:
                mibn        60      - мінімальна напруга бортової мережі, V
                miibn       10      - інтервал заниження напруги бортової мережі, Сек
                */
                if ( modbus.BVV.device.data() == 1 )
                {
                    if ( display.U_I.U_net.data() <= settings.volt.mibn.data() )
                    {
                        if ( vr.timout.Umin.data() == 0 )
                        {
                            /*Запуск счетчика аварии*/
                            vr.timout.Umin.setData(   sys.time.curent.data()
                                                    + settings.volt.miibn.data() );
                        } else if ( sys.time.curent.data() >= vr.timout.Umin.data() )
                        {
                            /*Запись в журнал и вывод на экран*/
                            if ( vr.msg.Umin.data() == 0 )
                            {
                                archive( 26, display.U_I.U_net.data() );
                                vr.msg.Umin.setData( 1 );
                            }
                        }
                    } else
                    {
                        vr.timout.Umin.setData( 0 );
                        vr.msg.Umin.setData( 0 );
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    vr.timout.Umin.setData( 0 );
                    vr.msg.Umin.setData( 0 );
                }
                "
        },
        {
            "name":"checkImax",
            "sources":[ "sys.time.curent" ],
            "processing":"
                /*25 I max генератора ХХХ А - електрообладнання*/
                /*
                    Ток генератора:
                    Диапазон измерения, отображения (0…+250) А.
                    Должен быть обеспечен постоянный вывод на главный экран, (обновление - ХХсек
                устанавливается из сервисного меню настроек) и на 2 экран (обновление - 1сек).
                При токе Iгенератора > 235А в течение 2сек – запись в журнал (экран 4) «Високий
                струм генератора ХХА» и отображение на главном экране «Високий струм» -электрооборудование переводится в аварийный режим.
                    Налаштування для генератора:
                mcg         235        - максимальний струм генератора, А
                imcg        2          - інтервал перевищення струму генератора, мСек
                */

                if ( modbus.BVV.device.data() == 1 )
                {
                    if ( display.U_I.I_gen.data() >= settings.gen.mcg.data() )
                    {
                        if ( vr.timout.Imax.data() == 0 )
                        {
                            /*Запуск счетчика аварии*/
                            vr.timout.Imax.setData(   sys.time.curent.data()
                                                    + settings.gen.imcg.data() );
                        } else if ( sys.time.curent.data() >= vr.timout.Imax.data() )
                        {
                            /*Запись в журнал и вывод на экран*/
                            if ( vr.msg.Imax.data() == 0 )
                            {
                                archive( 25, display.U_I.I_gen.data() );
                                vr.msg.Imax.setData( 1 );
                            }
                        }
                    } else
                    {
                        vr.timout.Imax.setData( 0 );
                        vr.msg.Imax.setData( 0 );
                    }
                } else if ( vr.msg.BVVConnError.data() == 1 )
                {
                    vr.timout.Imax.setData( 0 );
                    vr.msg.Imax.setData( 0 );
                }
                "
        },
        {
            "name":"setImaxGeneral",
            "sources":[
                "vr.msg.Imax",
                "vr.msg.ImaxBat"
                ],
            "processing":"
                /*Признак превышения любого из токов генератора или АБ.*/
                if ( ( vr.msg.Imax.data() == 1 ) || ( vr.msg.ImaxBat.data() == 1 ) )
                {
                    vr.msg.ImaxGeneral.setData( 1 );
                } else
                {
                    vr.msg.ImaxGeneral.setData( 0 );
                }
                "
        },
        {
            "name":"setOutFault",
            "sources":[
                "vr.msg.ImaxGeneral",
                "vr.msg.Umin",
                "vr.msg.Umax",
                "display.BVV.umax_zrk",
                "display.BVV.r_insulation",
                "display.BVV.crash"
                ],
            "processing":"
                /* Переводит пеереводит электрооборудование в режим АВАРИЯ.
                   По последним данным, взводим этот сигнал только если БВВ не выставил АВАРИЮ.
                   Если он выставил, условия не анализируем и свой фаулт сбрасываем.
                */                
                if ( (    ( vr.msg.ImaxGeneral.data() == 1 )
                       || ( vr.msg.Umin.data() == 1 )
                       || ( vr.msg.Umax.data() == 1 )
                       || ( display.BVV.umax_zrk.data() == 1 )
                       || (    display.BVV.r_insulation.data() == 1
                            && settings.resist.val.data() == 1 )
                     ) && display.BVV.crash.data() == 0 )
                {
                    out.BVV.fault.setData( 1 );
                } else
                {
                    out.BVV.fault.setData( 0 );
                }
                "
        },
        {

            "comment":"Подсчет времени наработки",
            "name":"WorkedHours_pool",
            "sources":[
                "sys.time.curent"
                ],
            "processing":"

                //------------------------------------------------------
                // Обновление времени наработки.
                // Время наработки хранится в регистре settings.wagon.res,
                // а время начала работы в регистре vr.WorkedHours.startTime.
                // При онавление разница между текущим временен и времененм начала раоты
                // учитвается во времени наработки, а временем начала работы начинает считаться
                // текущее время
                function updateWagonRes()
                {
                    var delta = sys.time.curent.data( );
                    delta = sys.time.curent.data( ) - vr.WorkedHours.startTime.data( );  // Время которое прошло с момента последнего сохранения
                    delta = settings.wagon.res.data() + ( delta / 60 );                  // Время в секундах, а наработка хранится в минутах
                    settings.wagon.res.setData( delta );

                    vr.WorkedHours.startTime.setData( sys.time.curent.data() );
                };

                //----------------------------------------------------------
                // Расчитываем время до следующего обновления наработки.
                // Обновления раз в час, время на экране в часах, время наработки в базе в минутах,
                // системное время в секундах.
                function setNextUpdateTime()
                {
                    var resMin = settings.wagon.res.data() % 60 ; // Узнаем сколько минут прошло от последнегообновления.
                    resMin = 60 - resMin ; // Узнаем сколько минут осталось до того, что бы наработка перевалила за следующий шаг.
                    resMin = resMin * 60 ; // Переводим минуты в секунды
                    vr.WorkedHours.nextUpdateTime.setData(  sys.time.curent.data() + resMin ); // Устанавливаем время следующего обновления наработки
                };


                // Фиксируем время запуска системы
                if( vr.WorkedHours.startTime.data() == 0 )
                {
                    // При включении, считаем временем начала работы - текущее время
                    vr.WorkedHours.startTime.setData( sys.time.curent.data() );

                    setNextUpdateTime();

                    // Устанавливаем регистр отображения тут, поскольку при старте settings.wagon.res
                    // создается ранеше чем display.wagon.res и начальное значение в него не попадает,
                    // потому что функция set_display_wagon_res не вызывается в этом случае.
                    display.wagon.res.setData( settings.wagon.res.data() / 60 );

                    /*Запись в журнал о ВКЛЮЧЕНИИ*/
                    archive( 19 );

                    vr.shutdownDelay.delayActivated.setData( 0 );
                    vr.shutdownDelay.receiveRequestTime.setData( 0 );

                } else
                {

                    //-------------------------------------------------------------
                    // Алгоритм обновления данных о наработке
                    // Поскольку на экране время наработки индицируется в часах,
                    // обновляем ее раз в час
                    //-------------------------------------------------------------
                    if ( vr.WorkedHours.nextUpdateTime.data() < sys.time.curent.data() )
                    {
                         updateWagonRes();

                        // Нужно подумать, нужно ли писать в базу каждый час, все равно перед выключением сохраняется.
                        // saveSettings('wagon','res', settings.wagon.res.data() );
                        //-------------------------------------------------------

                        setNextUpdateTime();
                    }

                    //-------------------------------------------------------------
                    // Алгоритм обработки запроса на выключение системы
                    //-------------------------------------------------------------

                    // Запрос может формироватся не по одному сигналу, поэтому соберем
                    // их в одной переменной, которую дальше будем обрабатывать.
                    // 1) Пропадание силнала 'ЭО включено' является запросом
                    // 2) Появление сигнала кнопки OFF является запросом
                    // 3) Сигнал 'ЭО включено' должен анализироватся только при наличии связи
                    var request = (    (    display.BVV.elEquipmentOn.data() == 0
                                         && modbus.BVV.device.data() == 1 )
                                    || buttons.buttons.Off.data() == 1   )        ?    1    :    0;

                    // Если режим задержки не активрован ожидаем запроса на активацию
                    if ( vr.shutdownDelay.delayActivated.data( ) == 0 )
                    {
                        if ( request == 1 )
                        {
                            vr.shutdownDelay.delayActivated.setData( 1 );

                            // Ожидаем 7 с до выключения
                            vr.shutdownDelay.receiveRequestTime.setData( sys.time.curent.data() + 7 );

                            vr.shutdownDelay.shutdownExec.setData( 0 );
                        }
                    } else
                    {
                        // Если режим активирован, ожидаем или окончания задержки
                        // и выключаем систему, или отмены запроса
                        if ( request == 1 )
                        {
                            if( vr.shutdownDelay.receiveRequestTime.data( ) < sys.time.curent.data( ) )
                            {
                                if ( vr.shutdownDelay.shutdownExec.data() == 0 )
                                {
                                     updateWagonRes();

                                    // Перед выключение сохраняем обязательно.
                                    saveSettings('wagon','res', settings.wagon.res.data() );
                                    //-------------------------------------------------------

                                    setNextUpdateTime();

                                    // Запись в журнал не делаем, поскольку она делается в программе в деструкторе при ее щавершении.
                                    //archive( 19 );

                                    // Здесь должно быть выключени системы, пока для отладки сделаю запись в дебаговую переменну.
                                    systemShutdown();

                                    vr.shutdownDelay.shutdownExec.setData( 1 );
                                }
                            }
                        } else
                        {
                            vr.shutdownDelay.delayActivated.setData( 0 );
                            vr.shutdownDelay.receiveRequestTime.setData( 0 );
                        }
                    }

                }
                "
        },
        {
            "comment":"При изменении температуры уставки - Отобразить и Запись в базу
                       При разрыве связи с A9 - Отобразить и НЕ ПИСАТЬ в базу",
            "name":"save_settings_temp_sut",
            "sources":[
                "vr.msg.A9ConnError",
                "settings.temp.sut"
                ],
            "processing":"
                /* Если НЕ обрыв */
                if(vr.msg.A9ConnError.data() != 1)
                {
                    /* Если НЕ востановление после обрыва */
                    if(vr.msg.A9ConnErrorLastState.data() == 0)
                    {
                        /* Сохранить значение во временную переменную */
                        vr.temp.temp_T_ust.setData(settings.temp.sut.data());
                        /* Отобразить на виджете */
                        display.temp.t_ust.setData( settings.temp.sut.data() );
                        /* Сохранить в базу */
                        saveSettings('temp','sut', settings.temp.sut.data() );
                    } else
                    {
                        /* Если восстановление после потери связи с А9 */
                        /* Сбросить флаг - Последнее состояние подключения А9 - обрыв*/
                        vr.msg.A9ConnErrorLastState.setData( 0 );
                        /* Отобразить на виджете */
                        display.temp.t_ust.setData( vr.temp.temp_T_ust.data() );
                        /* Восстановить предыдущее значение (последним)*/
                        settings.temp.sut.setData( vr.temp.temp_T_ust.data() );
                    }
                } else
                {
                    /* Если обрыв */
                    /* Установить флаг - Последнее состояние подключения А9 - обрыв*/
                    vr.msg.A9ConnErrorLastState.setData( 1 );

                    display.temp.t_ust.setData( 24 );
                    settings.temp.sut.setData( 24 );
                }
                modbus.A9.r40001.setData( settings.temp.sut.data() );
                "
        },
        {
            "comment":"Считает ресурс в часах, для отображения",
            "name":"set_display_wagon_res",
            "sources":["settings.wagon.res"],
            "processing":"display.wagon.res.setData( settings.wagon.res.data()/60 );"
        },
        {
            "comment":"Контроль вентилятора процессора",
            "name":"funControl",
            "sources":[ "sys.time.curent" ],
            "processing":"
                if( getCpuT() >= settings.fun.ton.data())
                {
                    setCoolerMode( 1 );
                }

                if( getCpuT() <= settings.fun.toff.data())
                {
                    setCoolerMode( 0 );
                }
            "
        },
        {

            "comment":"ТЕСТ!!!",
            "name":"test",
            "sources":[ "sys.time.curent",
                        "buttons.buttons.F1",
                        "buttons.buttons.F2",
                        "buttons.buttons.F3",
                        "buttons.buttons.F4",
                        "buttons.buttons.Off"
                      ],
            "processing":"
            /*
                //if(sys.time.curent.data()%2)
                if(buttons.buttons.F1.data() == 1 ||
                   buttons.buttons.F2.data() == 1)
                {
                    archive( 18 );
                    setCoolerMode( 0 );
                }
                //else
                if (buttons.buttons.F3.data() == 1 ||
                    buttons.buttons.F4.data() == 1)
                {
                    archive( 19 );
                    setCoolerMode( 1 );
                }
            */
            "
        }
    ]
}
