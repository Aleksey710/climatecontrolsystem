{
    "data":[
        { "lineComment":"------------------------------------------------------------------------------------------------------" },
        { "lineComment":"Данные внешних устройств" },
            { "name":"modbus.BVV.device",       "title":"Состояние устройства БВВ",                         "value": 0 },
            { "name":"modbus.BVV.r30000",       "title":"Регистр дискретных входов 1",                      "value": 0 },
            { "name":"modbus.BVV.r30001",       "title":"Регистр дискретных входов 2",                      "value": 0 },
            { "name":"modbus.BVV.r30002",       "title":"Салон (tсал)",                                     "value": 0 },
            { "name":"modbus.BVV.r30003",       "title":"Приточный (воздуховод) (tпр)",                     "value": 0 },
            { "name":"modbus.BVV.r30004",       "title":"Наружный (tнв)",                                   "value": 0 },
            { "name":"modbus.BVV.r30005",       "title":"Вода в котле (tкотла)",                            "value": 0 },
            { "name":"modbus.BVV.r30006",       "title":"Ток батареи (АКБ)",                                "value": 0 },
            { "name":"modbus.BVV.r30007",       "title":"Ток генератора",                                   "value": 0 },
            { "name":"modbus.BVV.r30008",       "title":"Напряжение сети",                                  "value": 0 },

            { "name":"modbus.BVV.r40000",       "title":"Регистр дискретных выходов",                       "value": 0 },
            { "name":"modbus.BVV.r40001",       "title":"Выходное напряжение канала 1(Коррекция температуры)", "value": 0 },
            { "name":"modbus.BVV.r40002",       "title":"Выходное напряжение канала 2",                     "value": 0 },
            { "name":"modbus.BVV.r40003",       "title":"Выходное напряжение канала 3",                     "value": 0 },
            { "name":"modbus.BVV.r40004",       "title":"Выходное напряжение канала 4",                     "value": 0 },
            { "name":"modbus.BVV.r40028",       "title":"Версия встроенного ПО БВВ",                        "value": 0 },
            { "name":"modbus.BVV.r40029",       "title":"Год прошивки",                                     "value": 0 },
            { "name":"modbus.BVV.r40030",       "title":"Месяц прошивки",                                   "value": 0 },
            { "name":"modbus.BVV.r40031",       "title":"День прошивки",                                    "value": 0 },

            { "name":"modbus.A9.device",        "title":"Состояние устройства БУТ (А9)",                    "value": 0 },
            { "name":"modbus.A9.r40001",        "title":"Коррекция температуры запись",                     "value": 0 },
            { "name":"modbus.A9.r40028",        "title":"Версия встроенного ПО БУТ",                        "value": 0 },
            { "name":"modbus.A9.r40029",        "title":"Год прошивки",                                     "value": 0 },
            { "name":"modbus.A9.r40030",        "title":"Месяц прошивки",                                   "value": 0 },
            { "name":"modbus.A9.r40031",        "title":"День прошивки",                                    "value": 0 },

            { "name":"modbus.Tsal.device",      "title":"Состояние датчика температуры салона",             "value": 0 },
            { "name":"modbus.Tsal.r30000",      "title":"Салон (tсал)",                                     "value": 0 },

            { "name":"modbus.Tnv.device",       "title":"Состояние датчика температуры наружного воздуха",  "value": 0 },
            { "name":"modbus.Tnv.r30000",       "title":"Наружный (tнв)",                                   "value": 0 },

            { "name":"modbus.Tpr.device",       "title":"Состояние датчика температуры приточного воздуха", "value": 0 },
            { "name":"modbus.Tpr.r30000",       "title":"Приточный (воздуховод) (tпр)",                     "value": 0 },

            { "name":"modbus.Tkotl.device",     "title":"Состояние датчика температуры котла",              "value": 0 },
            { "name":"modbus.Tkotl.r30000",     "title":"Вода в котле (tкотла)",                            "value": 0 },
        { "lineComment":"------------------------------------------------------------------------------------------------------" },

        { "lineComment":"------------------------------------------------------------------------------------------------------" },
        { "lineComment":"Расчетные данные входные" },
            { "name":"display.temp.t_nv",         "title":"Температура наружного воздуха",   "value": 0 },
            { "name":"display.temp.t_sal",        "title":"Температура салона",              "value": 0 },
            { "name":"display.temp.t_pr",         "title":"Температура приточного воздуха",  "value": 0 },
            { "name":"display.temp.t_kotl",       "title":"Температура котла",               "value": 0 },
            { "name":"display.temp.t_ust",        "title":"Температура уставки",             "value": 0 },
            { "name":"display.U_I.I_bat",         "title":"Ток АКБ ",                        "value": 0 },
            { "name":"display.U_I.I_gen",         "title":"Ток генератора ",                 "value": 0 },
            { "name":"display.U_I.U_net",         "title":"Напряжение сети ",                "value": 0 },
            { "name":"display.BVV.u3000",         "title":"Напруга 3000В",                   "value": 0 },
            { "name":"display.BVV.VVO_1",         "title":"ВВО 1гр",                         "value": 0 },
            { "name":"display.BVV.VVO_2",         "title":"ВВО 2гр",                         "value": 0 },
            { "name":"display.BVV.NVO",           "title":"NVO",                             "value": 0 },
            { "name":"display.BVV.generator",     "title":"Вн. мережа 380В/генератор",       "value": 0 },
            { "name":"display.BVV.automode",      "title":"Автоматичний режим",              "value": 0 },
            { "name":"display.BVV.crash",         "title":"Аварiя",                          "value": 0 },
            { "name":"display.BVV.elEquipmentOn", "title":"ЕО включене",                     "value": 0 },
            { "name":"display.BVV.condFailure",   "title":"Кондицiонер ВIДМОВА",             "value": 0 },
            { "name":"display.BVV.cont2Failure",  "title":"Вiдмова контура охолодження 2",   "value": 0 },
            { "name":"display.BVV.cont1Failure",  "title":"Вiдмова контура охолодження 1",   "value": 0 },
            { "name":"display.BVV.condWorked",    "title":"Кондицiонер РОБОТА",              "value": 0 },
            { "name":"display.BVV.cooling",       "title":"Охолодження",                     "value": 0 },
            { "name":"display.BVV.heater",        "title":"Калорифер",                       "value": 0 },
            { "name":"display.BVV.umax_zrk",      "title":"Umax ЗРК",                        "value": 0 },
            { "name":"display.BVV.r_insulation",  "title":"R iзоляцiї < 1 kOm ",             "value": 0 },
            { "name":"display.BVV.version",       "title":"Версия встроенного ПО БВВ",       "value": 0 },
            { "name":"display.BVV.year",          "title":"Год прошивки",                    "value": 0 },
            { "name":"display.BVV.month",         "title":"Месяц прошивки",                  "value": 0 },
            { "name":"display.BVV.day",           "title":"День прошивки",                   "value": 0 },

            { "name":"display.A9.version",        "title":"Версия встроенного ПО БУТ",       "value": 0 },
            { "name":"display.A9.year",           "title":"Год прошивки",                    "value": 0 },
            { "name":"display.A9.month",          "title":"Месяц прошивки",                  "value": 0 },
            { "name":"display.A9.day",            "title":"День прошивки",                   "value": 0 },
        { "lineComment":"------------------------------------------------------------------------------------------------------" },

        { "lineComment":"------------------------------------------------------------------------------------------------------" },
        { "lineComment":"Системные данные " },
        { "lineComment":"------------------------------------------------------------------------------------------------------" },

        { "lineComment":"------------------------------------------------------------------------------------------------------" },
        { "lineComment":"Расчетные данные промежуточные" },

            { "lineComment":"Защита от перегрева котла. Запрещает работу насоса и ВВО" },
                { "name":"vr.kotl.overheat",       "title":"Признак того, что котел перегрелся.",        "value": 0 },
                { "name":"vr.kotl.time",           "title":"Время превышения температуры, достигнув которого взведется признак перегрева котла.",        "value": 0 },
            { "lineComment":"---------------------------------------------------------------------" },
            { "lineComment":"Переменные алгоритма включения НВО" },
                { "name":"vr.timout.dlhon",           "title":"атримка включення НВО, Сек",                          "value": 0 },
                { "name":"vr.timout.dlhoff",          "title":"затримка виключення НВО, Сек",                        "value": 0 },
                { "name":"vr.timout.dlhr",            "title":"затримка відповіді включення НВО від БВВ, Сек",       "value": 0 },
                { "name":"vr.timout.dlh",             "title":"затримка повторного включення НВО, Сек",              "value": 0 },
                { "name":"vr.timout.nvoResponseTime", "title":"Время, ожидания ответа включения НВО",                "value": 0 },
                { "name":"vr.temp.nvoOn",             "title":"Включение НВО признак для запуска отсчета задержек",  "value": 0 },
                { "name":"vr.temp.nvoOff",            "title":"Выключение НВО признак для запуска отсчета задержек", "value": 0 },
                { "name":"vr.temp.nvoFirst",          "title":"Признак повторного включения НВО (0)",                "value": 0 },
                { "name":"vr.temp.nvoResponseError",  "title":"Ошибка ответа НВО",                                   "value": 0 },
            { "lineComment":"---------------------------------------------------------------------" },
            { "lineComment":"Переменные алгоритма включения ВВО" },
                { "name":"vr.temp.vvokotlon",          "title":"Температура котла необхідна для ввімкненяя ВВО",           "value": 0 },
                { "name":"vr.temp.vvokotloff",         "title":"Температура котла необхідна для вимкненя ВВО",             "value": 0 },
                { "name":"vr.timout.vvodsd",           "title":"час простою перед наступним включенням ВВО, Сек",          "value": 0 },
                { "name":"vr.timout.vvosod",           "title":"затримка включення ВВО, Сек",                              "value": 0 },
                { "name":"vr.timout.vvord",            "title":"затримка відповіді включення ВВО від БВВ, Сек",            "value": 0 },
                { "name":"vr.timout.vvo1ResponseTime", "title":"Время, ожидания ответа включения ВВО 1 гр.",               "value": 0 },
                { "name":"vr.timout.vvo2ResponseTime", "title":"Время, ожидания ответа включения ВВО 2 гр.",               "value": 0 },
                { "name":"vr.temp.vvo1On",             "title":"Включение ВВО 1 гр. признак для запуска отсчета задержек", "value": 0 },
                { "name":"vr.temp.vvo2On",             "title":"Включение ВВО 2 гр. признак для запуска отсчета задержек", "value": 0 },
                { "name":"vr.temp.vvoOn",              "title":"Включение ВВО признак формируется после формирования задержек и необходим для непосредственного управления группами.", "value": 0 },
                { "name":"vr.temp.vvoInvert",          "title":"Смена групп ВВО: false(0) – при включении первой группы вкл. первая; true(1) – при включении первой группы вкл. вторая.", "value": 0 },
                { "name":"vr.temp.vvoFirst",          "title":"Признак повторного включения ВВО (0)",                     "value": 0 },
                { "name":"vr.temp.vvo1ResponseError",  "title":"Ошибка ответа ВВО гр1",                                    "value": 0 },
                { "name":"vr.temp.vvo2ResponseError",  "title":"Ошибка ответа ВВО гр2",                                    "value": 0 },
            { "lineComment":"---------------------------------------------------------------------" },
        { "lineComment":"------------------------------------------------------------------------------------------------------" },

        { "lineComment":"------------------------------------------------------------------------------------------------------" },
        { "lineComment":"Расчетные данные выходные" },
                { "name":"out.BVV.vvo1On", "title":"Включение ВВО 1 гр.", "value": 0 },
                { "name":"out.BVV.vvo2On", "title":"Включение ВВО 2 гр.", "value": 0 },
                { "name":"out.BVV.pompOn", "title":"Включение насоса", "value": 0 },
                { "name":"out.BVV.nvoOn",  "title":"Включение НВО", "value": 0 },
                { "name":"out.BVV.fault",  "title":"Авария (по Imax, Umax, Umin)", "value": 0 },
                { "name":"out.BVV.bpOn",   "title":"Включение БП", "value": 0 },
                { "name":"out.BVV.pvvOn",  "title":"Повернення (с БВВ привключении)", "value": 0 },
        { "lineComment":"------------------------------------------------------------------------------------------------------" }
    ],
    "functions":[
        {
            "name":"setT_sal",
            "sources":["modbus.BVV.device","modbus.BVV.r30002", "modbus.Tsal.device", "modbus.Tsal.r30000"],
            "processing":"
                if (settings.temp.useBVV.data()==1) {
                    if (modbus.BVV.device.data() ) {
                        display.temp.t_sal.setData(
                        settings.offset.cmc.data()  *
                        (modbus.BVV.r30002.data()/settings.offset.oc.data())
                       + settings.offset.tc.data() );
                    } else {
                       display.temp.t_sal.setData( 0 );
                    }
                } else {
                    if (modbus.Tsal.device.data()) {
                        display.temp.t_sal.setData(
                        settings.offset.cmc_mb.data()  *
                        (modbus.Tsal.r30000.data()/settings.offset.oc.data())
                       + settings.offset.tc_mb.data() );
                    } else {
                       display.temp.t_sal.setData( 0 );
                    }
                }"
        },
        {
            "name":"setT_pr",
            "sources":["modbus.BVV.device","modbus.BVV.r30003","modbus.Tpr.device","modbus.Tpr.r30000"],
            "processing":"
                if (settings.temp.useBVV.data()==1) {
                    if (modbus.BVV.device.data() ) {
                        display.temp.t_pr.setData(
                        settings.offset.cmf.data()  *
                        (modbus.BVV.r30003.data()/settings.offset.oc.data())
                       + settings.offset.af.data() );
                    } else {
                       display.temp.t_pr.setData( 0 );
                    }
                } else {
                    if (modbus.Tpr.device.data()) {
                        display.temp.t_pr.setData(
                        settings.offset.cmf_mb.data() *
                        (modbus.Tpr.r30000.data()/settings.offset.oc.data())
                       + settings.offset.af_mb.data() );
                    } else {
                       display.temp.t_pr.setData( 0 );
                    }
                }"
        },
        {
            "name":"setT_nv",
            "sources":["modbus.BVV.device","modbus.BVV.r30004","modbus.Tnv.device","modbus.Tnv.r30000"],
            "processing":"
                if (settings.temp.useBVV.data()==1) {
                    if (modbus.BVV.device.data() ) {
                        display.temp.t_nv.setData(
                        settings.offset.cmo.data() *
                        (modbus.BVV.r30004.data()/settings.offset.oc.data())
                       + settings.offset.to.data() );
                    } else {
                       display.temp.t_nv.setData( 0 );
                    }
                } else {
                    if (modbus.Tnv.device.data()) {
                        display.temp.t_nv.setData(
                        settings.offset.cmo_mb.data() *
                        (modbus.Tnv.r30000.data()/settings.offset.oc.data())
                       + settings.offset.to_mb.data() );
                    } else {
                       display.temp.t_nv.setData( 0 );
                    }
                }"
        },
        {
            "name":"setT_kotl",
            "sources":["modbus.BVV.device","modbus.BVV.r30005","modbus.Tkotl.device","modbus.Tkotl.r30000"],
            "processing":"
                if (settings.temp.useBVV.data()==1) {
                    if (modbus.BVV.device.data() ) {
                        display.temp.t_kotl.setData(
                        settings.offset.cmb.data()  *
                        (modbus.BVV.r30005.data()/settings.offset.oc.data())
                       + settings.offset.tb.data() );
                    } else {
                       display.temp.t_kotl.setData( 0 );
                    }
                } else {
                    if (modbus.Tkotl.device.data() == 1 ) {
                        display.temp.t_kotl.setData(
                        settings.offset.cmb_mb.data()  *
                        (modbus.Tkotl.r30000.data()/settings.offset.oc.data())
                       + settings.offset.tb_mb.data() );
                    } else {
                       display.temp.t_kotl.setData( 0 );
                    }
                }"
        },
        {
                "name":"set_I_bat",
                "sources":["modbus.BVV.device","modbus.BVV.r30006"],
                "processing":"
                if (modbus.BVV.device.data() == 1 ) {
                        display.U_I.I_bat.setData(
                        settings.offset.cmi.data() *
                        (modbus.BVV.r30006.data()/settings.offset.oc.data())
                       + settings.offset.cb.data() );
                } else {
                       display.U_I.I_bat.setData( 0 );
                }"
        },
        {
            "name":"set_I_gen",
            "sources":["modbus.BVV.device","modbus.BVV.r30007"],
            "processing":"
                if (modbus.BVV.device.data() == 1 ) {
                    display.U_I.I_gen.setData(
                        settings.offset.cmg.data()  *
                        (modbus.BVV.r30007.data()/settings.offset.oc.data())
                       + settings.offset.cg.data() );
                } else {
                    display.U_I.I_gen.setData( 0 );
                }"
        },
        {
            "name":"set_U_net",
            "sources":["modbus.BVV.device","modbus.BVV.r30008"],
            "processing":"
                if (modbus.BVV.device.data() ) {
                    display.U_I.U_net.setData(
                        settings.offset.cmv.data()  *
                        (modbus.BVV.r30008.data()/settings.offset.oc.data())
                       + settings.offset.nv.data() );
                } else {
                    display.U_I.U_net.setData( 0 );
                }"
        },
        {
            "name":"set_u3000",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.u3000.setData((modbus.BVV.r30000.data()&1)>0);
                } else {
                    display.BVV.u3000.setData(0);
                }"
        },
        {
            "name":"set_VVO_1",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.VVO_1.setData((modbus.BVV.r30000.data()&2)>0);
                }else{
                    display.BVV.VVO_1.setData(0);
                }"
        },
        {
            "name":"set_VVO_2",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.VVO_2.setData((modbus.BVV.r30000.data()&4)>0);
                }else{
                    display.BVV.VVO_2.setData(0);
                }"
        },
        {
            "name":"set_NVO",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.NVO.setData((modbus.BVV.r30000.data()&8)>0);
                }else{
                    display.BVV.NVO.setData(0);
                }"
        },
        {
            "name":"set_generator",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.generator.setData((modbus.BVV.r30000.data()&16)>0);
                }else{
                    display.BVV.generator.setData(0);
                }"
        },
        {
            "name":"set_automode",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.automode.setData((modbus.BVV.r30000.data()&32)>0);
                } else {
                    display.BVV.automode.setData(0);
                }"
        },
        {
            "name":"set_crash",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.crash.setData((modbus.BVV.r30000.data()&64)>0);
                }else{
                    display.BVV.crash.setData(0);
                }"
        },
        {
            "name":"set_elEquipmentOn",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.elEquipmentOn.setData((modbus.BVV.r30000.data()&128)>0);
                } else {
                    display.BVV.elEquipmentOn.setData(0);
                }"
        },
        {
            "name":"set_condFailure",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.condFailure.setData((modbus.BVV.r30000.data()&256)>0);
                }else{
                    display.BVV.condFailure.setData(0);
                }"
        },
        {
            "name":"set_cont2Failure",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.cont2Failure.setData((modbus.BVV.r30000.data()&512)>0);
                }else{
                    display.BVV.cont2Failure.setData(0);
                }"
        },
        {
            "name":"set_cont1Failure",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.cont1Failure.setData((modbus.BVV.r30000.data()&1024)>0);
                }else{
                    display.BVV.cont1Failure.setData(0);
                }"
        },
        {
            "name":"set_condWorked",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.condWorked.setData((modbus.BVV.r30000.data()&2048)>0);
                }else{
                    display.BVV.condWorked.setData(0);
                }"
        },
        {
            "name":"set_cooling",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.cooling.setData((modbus.BVV.r30000.data()&4096)>0);
                }else{
                    display.BVV.cooling.setData(0);
                }"
        },
        {
            "name":"set_heater",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.heater.setData((modbus.BVV.r30000.data()&8192)>0);
                }else{
                    display.BVV.heater.setData(0);
                }"
        },
        {
            "name":"set_umax_zrk",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.umax_zrk.setData((modbus.BVV.r30000.data()&16384)>0);
                }else{
                    display.BVV.umax_zrk.setData(0);
                }"
        },
        {
            "name":"set_r_insulation",
            "sources":["modbus.BVV.device","modbus.BVV.r30000"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.r_insulation.setData((modbus.BVV.r30000.data()&32768)>0);
                }else{
                    display.BVV.r_insulation.setData(0);
                }"
        },
        {
            "name":"set_BVV_version",
            "sources":["modbus.BVV.device","modbus.BVV.r40028"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.version.setData(modbus.BVV.r40028.data());
                }else{
                    display.BVV.version.setData(0);
                }"
        },
        {
            "name":"set_BVV_version_year",
            "sources":["modbus.BVV.device","modbus.BVV.r40029"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.year.setData(modbus.BVV.r40029.data());
                }else{
                    display.BVV.year.setData(0);
                }"
        },
        {
            "name":"set_BVV_version_month",
            "sources":["modbus.BVV.device","modbus.BVV.r40030"],
            "processing":"
                if(modbus.BVV.device.data()==1){
                    display.BVV.month.setData(modbus.BVV.r40030.data());
                }else{
                    display.BVV.month.setData(0);
                }"
        },
        {
            "name":"set_BVV_version_day",
            "sources":["modbus.BVV.device","modbus.BVV.r40031"],
            "processing":"
                if(modbus.BVV.device.data()==1)
                {
                    display.BVV.day.setData(modbus.BVV.r40031.data());
                }else{
                    display.BVV.day.setData(0);
                }"
        },


        {
            "name":"checkNVO_On",
            "sources":[
                "modbus.BVV.device",
                "display.BVV.automode",
                "vr.temp.nvoResponseError",
                "display.BVV.generator",
                "display.temp.t_nv",
                "display.temp.t_sal",
                "settings.temp.sut",
                "display.BVV.cooling",
                "display.BVV.condWorked" ],
            "processing":"
                if ( modbus.BVV.device.data() == 1 )
                {
                    if (    ( display.BVV.automode.data() == 1 )
                                 && ( vr.temp.nvoResponseError.data() == 0 )
                                 && ( display.BVV.generator.data() == 1 )
                                 && ( display.temp.t_nv.data() < ( settings.temp.onnvo.data()
                                                                - settings.temp.onlvhd.data() ) )
                                 && ( display.temp.t_sal.data() < (settings.temp.sut.data() - 2) )
                                  && ( display.BVV.cooling.data() == 0)    )
                     {
                        if ( settings.cond.ccm.data() == 1 ) {
                            vr.temp.nvoOn.setData( 1 );
                        } else if  (display.BVV.condWorked.data() == 0 ){
                            vr.temp.nvoOn.setData( 1 );
                        } else {
                            vr.temp.nvoOn.setData( 0 );
                        }
                    } else {
                        vr.temp.nvoOn.setData( 0 );
                    }
                } else {
                    vr.temp.nvoOn.setData( 0 );
                }"
         },
         {
             "name":"delayNVO_On",
             "sources":[ "sys.time.curent" ],
             "processing":"
                if ( display.BVV.automode.data() == 0 )
                {
                    vr.temp.nvoFirst.setData( 0 );
                    vr.temp.nvoResponseError.setData( 0 );
                    vr.timout.nvoResponseTime.setData( 0 );
                }

                if ( vr.temp.nvoOn.data() == 1 && out.BVV.nvoOn.data() == 0 )
                {
                    if ( vr.temp.nvoFirst.data() == 0 )
                    {
                        if ( vr.timout.dlhon.data() == 0 )
                        {
                            vr.timout.dlhon.setData( sys.time.curent.data() +
                                                      settings.delay.dlhon.data() * 1000
                                                     );
                        }

                        if ( sys.time.curent.data() >= vr.timout.dlhon.data() )
                        {
                            out.BVV.nvoOn.setData( 1 );
                            vr.temp.nvoFirst.setData( 1 );
                            vr.timout.nvoResponseTime.setData(
                                                sys.time.curent.data() +
                                                settings.delay.dlhr.data() * 1000 );
                        }
                    } else {
                        if ( vr.timout.dlhon.data() == 0 )
                        {
                            vr.timout.dlhon.setData( sys.time.curent.data() +
                                                + 60000 +
                                                settings.delay.dlh.data() * 1000 +
                                                settings.delay.dlhon.data() * 1000 );
                        }

                        if ( sys.time.curent.data() >= vr.timout.dlhon.data() )
                        {
                            out.BVV.nvoOn.setData( 1 );
                            vr.timout.nvoResponseTime.setData(
                                                sys.time.curent.data() +
                                                settings.delay.dlhr.data() * 1000 );
                        }
                    }
                } else
                {
                    vr.timout.dlhon.setData( 0 );
                }

                if ( vr.timout.nvoResponseTime.data() > 0 )
                {
                    if ( display.BVV.NVO.data() > 0 )
                    {
                        if ( sys.time.curent.data() < vr.timout.nvoResponseTime.data() )
                        {
                            vr.temp.nvoResponseError.setData( 0 );
                        }
                    } else
                    {
                        if ( sys.time.curent.data() >= vr.timout.nvoResponseTime.data() )
                        {
                            vr.temp.nvoResponseError.setData( 1 );
                            vr.timout.nvoResponseTime.setData( 0 );
                        }
                    }
                }"
        },
        {
            "name":"checkNVO_Off",
            "sources":[
                "modbus.BVV.device",
                "display.BVV.automode",
                "display.BVV.generator",
                "display.temp.t_nv",
                "display.temp.t_sal",
                "settings.temp.sut",
                "display.BVV.cooling",
                "display.BVV.condWorked" ],
            "processing":"
                if ( modbus.BVV.device.data() )
                {
                    if (      ( display.BVV.automode.data() == 0 )
                           || ( vr.temp.nvoResponseError.data() == 1 )
                           || ( display.BVV.generator.data()== 0 )
                           || ( display.temp.t_nv.data() >=  ( settings.temp.offnvo.data()
                                                            +  settings.temp.offlvhd.data() ) )
                           || ( display.temp.t_sal.data() > (settings.temp.sut.data()  + 1) )
                           || ( display.BVV.cooling.data() == 1) )
                    {
                        vr.temp.nvoOff. setData( 1 );
                    } else if (    settings.cond.ccm.data() == 0
                                && display.BVV.condWorked.data() == 1 )
                    {
                        vr.temp.nvoOff.setData( 1 );
                    } else {
                        vr.temp.nvoOff.setData( 0 );
                    }
                } else {
                    vr.temp.nvoOff.setData( 1 );
                }"
       },

       {
            "name":"delayNVO_Off",
            "sources":[ "sys.time.curent" ],
            "processing":"
                if (vr.temp.nvoOff.data() == 1 && out.BVV.nvoOn.data() == 1 )
                {
                    if (vr.timout.dlhoff.data() > 0 )
                    {
                       if ( sys.time.curent.data() >= vr.timout.dlhoff.data() )
                       {
                            out.BVV.nvoOn.setData( 0 );
                       }
                    } else {
                        vr.timout.dlhoff.setData( sys.time.curent.data() +
                                                   settings.delay.dlhoff.data() * 1000 );
                    }
                } else
                {
                    vr.timout.dlhoff.setData( 0 );
                }"
       },


       {
             "name":"checkKotlOverheat",
             "sources":[ "modbus.BVV.device", "display.temp.t_kotl" ],
             "processing":"
                 if ( modbus.BVV.device.data() == 1 )
                 {
                     if (display.temp.t_kotl.data() >= settings.temp.bt.data() )
                     {
                        if ( sys.time.curent.data() >= vr.kotl.time.data() )
                        {
                            vr.kotl.overheat.setData( 1 );
                        }
                     } else {
                         vr.kotl.time.setData ( sys.time.curent.data() +
                                                 settings.temp.ibt.data() * 1000);
                         vr.kotl.overheat.setData( 0 );
                     }
                 }else
                 {
                         vr.kotl.time.setData ( 0 );
                         vr.kotl.overheat.setData( 0 );
                 }"
        },
        {
             "name":"setVvoKotlOn",
             "sources":[ "modbus.BVV.device", "settings.temp.sut", "display.temp.t_nv", "display.temp.t_sal" ],
             "processing":"
                 if ( modbus.BVV.device.data() )
                 {
                     vr.temp.vvokotlon.setData(
                         settings.temp.x0.data() + settings.temp.x2.data() *
                         ( settings.temp.sut.data() - settings.temp.x3.data() ) -
                         settings.temp.x4.data() * display.temp.t_nv.data() +
                         settings.temp.x5.data() *
                         ( settings.temp.sut.data() - display.temp.t_sal.data() )
                     );
                 }"
        },
        {
             "name":"setVvoKotlOff",
             "sources":[ "modbus.BVV.device", "settings.temp.sut", "display.temp.t_nv", "display.temp.t_sal" ],
             "processing":"
                 if ( modbus.BVV.device.data() )
                 {
                     vr.temp.vvokotloff.setData(
                         settings.temp.x1.data() + settings.temp.x2.data() *
                         ( settings.temp.sut.data() - settings.temp.x3.data() ) -
                         settings.temp.x4.data() * display.temp.t_nv.data() +
                         settings.temp.x5.data() *
                         (settings.temp.sut.data() - display.temp.t_sal.data() )
                     );
                 }"
        },



        {
            "name":"checkVVO_On",
            "sources":[
                "modbus.BVV.device",
                "display.BVV.automode",
                "vr.temp.vvo1ResponseError",
                "vr.temp.vvo2ResponseError",
                "vr.kotl.overheat",
                "display.BVV.u3000",
                "settings.temp.sut",
                "display.temp.t_nv",
                "display.temp.t_sal",
                "display.temp.t_kotl",
                "display.BVV.cooling" ],
            "processing":"
                if ( modbus.BVV.device.data() == 1 )
                {
                    if (    ( display.BVV.automode.data() == 1 )
                         && (    vr.temp.vvo1ResponseError.data() == 0
                              || vr.temp.vvo2ResponseError.data() == 0 )
                         && ( vr.kotl.overheat.data() == 0 )
                         && ( display.BVV.u3000.data()  == 1 )
                         && ( display.temp.t_sal.data() < ( settings.temp.sut.data() -
                                                            settings.temp.vvohefon.data() ) )
                         && ( display.BVV.cooling.data() == 0)
                         && ( display.temp.t_kotl.data() < vr.temp.vvokotlon.data() ) )
                    {
                        if ( display.temp.t_nv.data() <= settings.temp.vvohoton.data() )
                        {
                            vr.temp.vvo1On.setData( 1 );
                            if (display.temp.t_nv.data() < settings.temp.vvootfdon.data() )
                            {
                                vr.temp.vvo2On.setData( 1 );
                            }
                        }
                    }
                }"
        },
        {
            "name":"checkVVO_Off",
            "sources":[
                "modbus.BVV.device",
                "display.BVV.automode",
                "vr.temp.vvo1ResponseError",
                "vr.temp.vvo2ResponseError",
                "vr.kotl.overheat",
                "display.BVV.u3000",
                "settings.temp.sut",
                "display.temp.t_nv",
                "display.temp.t_sal",
                "display.temp.t_kotl",
                "display.BVV.cooling" ],
            "processing":"
                if ( modbus.BVV.device.data() == 1 )
                {
                    if (     ( display.BVV.automode.data() == 0 )
                          || (    vr.temp.vvo1ResponseError.data() == 1
                               && vr.temp.vvo2ResponseError.data() == 1 )
                          || ( vr.kotl.overheat.data()  == 1 )
                          || ( display.BVV.u3000.data()  == 0 )
                          || ( display.temp.t_sal.data() > ( settings.temp.sut.data() +
                                                             settings.temp.vvohefoff.data() ) )
                          || ( display.BVV.cooling.data() == 1 )
                          || ( display.temp.t_kotl.data() >= vr.temp.vvokotlon.data() )
                          || ( display.temp.t_nv.data() > settings.temp.vvohotoff.data() )
                       )
                    {
                        vr.temp.vvo1On.setData( 0 );
                        vr.temp.vvo2On.setData( 0 );
                    }else{
                        if (    display.temp.t_nv.data() > settings.temp.vvootfdoff.data()
                             || vr.temp.vvo1ResponseError.data() == 1
                             || vr.temp.vvo2ResponseError.data() == 1 )
                        {
                            vr.temp.vvo2On.setData( 0 );
                        }
                    }
                } else {
                    vr.temp.vvo1On.setData( 0 );
                    vr.temp.vvo2On.setData( 0 );
                }"
        },
        {
            "name":"delayVVO_On",
            "sources":[ "sys.time.curent" ],
            "processing":"
                if ( display.BVV.automode.data() == 0 )
                {
                    vr.temp.vvoFirst.setData( 0 );
                    vr.temp.vvo1ResponseError.setData( 0 );
                    vr.temp.vvo2ResponseError.setData( 0 );
                    vr.timout.vvo1ResponseTime.setData( 0 );
                    vr.timout.vvo2ResponseTime.setData( 0 );
                }

                if ( vr.temp.vvo1On.data() == 1 && vr.temp.vvoOn.data() == 0 )
                {
                    if ( vr.temp.vvoFirst.data() == 0 )
                    {
                        if ( vr.timout.vvosod.data() == 0 )
                        {
                            vr.timout.vvosod.setData( sys.time.curent.data() +
                                                  settings.delay.vvosod.data() * 1000
                                                  );
                        }

                        if ( sys.time.curent.data() >= vr.timout.vvosod.data() )
                        {
                            vr.temp.vvoOn.setData( 1 );
                            vr.temp.vvoFirst.setData( 1 );
                        }
                    } else {
                        if ( vr.timout.vvosod.data() == 0 )
                        {
                            vr.timout.vvosod.setData( sys.time.curent.data() +
                                                  + 120000 +
                                                  settings.delay.vvodsd.data() * 1000 +
                                                  settings.delay.vvosod.data() * 1000
                                                  );
                        }

                        if ( sys.time.curent.data() >= vr.timout.vvosod.data() )
                        {
                            vr.temp.vvoOn.setData( 1 );
                        }
                    }
                } else
                {
                    if ( vr.temp.vvo1On.data() == 0 && vr.temp.vvoOn.data() == 1 )
                    {
                        vr.temp.vvoOn.setData( 0 );
                    }

                    vr.timout.vvosod.setData( 0 );
                }


                if ( vr.temp.vvoOn.data() == 1 )
                {
                    if (    vr.temp.vvo1ResponseError.data( ) == 0
                         && vr.temp.vvo2ResponseError.data( ) == 0)
                    {
                        if ( vr.temp.vvoInvert.data() == 0 )
                        {
                            if ( out.BVV.vvo1On.data() == 0 && vr.temp.vvo1On.data() == 1 )
                            {
                                out.BVV.vvo1On.setData( 1 );
                                vr.timout.vvo1ResponseTime.setData(
                                                  sys.time.curent.data() +
                                                  settings.delay.vvord.data() * 1000 );
                            }
                            if ( out.BVV.vvo2On.data() == 0 && vr.temp.vvo2On.data() == 1 )
                            {
                                out.BVV.vvo2On.setData( 1 );
                                vr.timout.vvo2ResponseTime.setData(
                                                  sys.time.curent.data() +
                                                  settings.delay.vvord.data() * 1000 );
                            }
                        } else {
                            if ( out.BVV.vvo1On.data() == 0 && vr.temp.vvo2On.data() == 1 )
                            {
                                out.BVV.vvo1On.setData( 1 );
                                vr.timout.vvo1ResponseTime.setData(
                                                  sys.time.curent.data() +
                                                  settings.delay.vvord.data() * 1000 );
                            }
                            if ( out.BVV.vvo2On.data() == 0 && vr.temp.vvo1On.data() == 1 )
                            {
                                out.BVV.vvo2On.setData( 1 );
                                vr.timout.vvo2ResponseTime.setData(
                                                  sys.time.curent.data() +
                                                  settings.delay.vvord.data() * 1000 );
                            }
                        }
                        out.BVV.pompOn.setData( vr.temp.vvo2On.data() );
                    } else if ( vr.temp.vvo1ResponseError.data( ) == 0 ) {
                        if ( out.BVV.vvo1On.data() == 0 && vr.temp.vvo1On.data() == 1 )
                        {
                            out.BVV.vvo1On.setData( 1 );
                            vr.timout.vvo1ResponseTime.setData(
                                              sys.time.curent.data() +
                                              settings.delay.vvord.data() * 1000 );
                        }
                        out.BVV.vvo2On.setData( 0 );
                        out.BVV.pompOn.setData( 0 );
                    } else if ( vr.temp.vvo2ResponseError.data( ) == 0 ) {
                        if ( out.BVV.vvo2On.data() == 0 && vr.temp.vvo1On.data() == 1 )
                        {
                            out.BVV.vvo2On.setData( 1 );
                            vr.timout.vvo2ResponseTime.setData(
                                              sys.time.curent.data() +
                                              settings.delay.vvord.data() * 1000 );
                        }
                        out.BVV.vvo1On.setData( 0 );
                        out.BVV.pompOn.setData( 0 );
                    } else {
                        out.BVV.vvo1On.setData( 0 );
                        out.BVV.vvo2On.setData( 0 );
                        out.BVV.pompOn.setData( 0 );
                    }
                } else {
                    if ( out.BVV.vvo1On.data() == 1 || out.BVV.vvo2On.data() == 1 )
                    {
                        if (    vr.temp.vvo1ResponseError.data( ) == 0
                             && vr.temp.vvo2ResponseError.data( ) == 0)
                        {
                            if ( vr.temp.vvoInvert.data() == 0 )
                            {
                                vr.temp.vvoInvert.setData( 1 );
                            } else {
                                vr.temp.vvoInvert.setData( 0 );
                            }
                        }
                    }
                    out.BVV.vvo1On.setData( 0 );
                    out.BVV.vvo2On.setData( 0 );
                    out.BVV.pompOn.setData( 0 );
                }

                if ( vr.timout.vvo1ResponseTime.data() > 0 )
                {
                    if ( display.BVV.VVO_1.data() > 0 )
                    {
                        if ( sys.time.curent.data() < vr.timout.vvo1ResponseTime.data() )
                        {
                            vr.temp.vvo1ResponseError.setData( 0 );
                        }
                    } else
                    {
                        if ( sys.time.curent.data() >= vr.timout.vvo1ResponseTime.data() )
                        {
                            vr.temp.vvo1ResponseError.setData( 1 );
                            vr.timout.vvo1ResponseTime.setData( 0 );
                        }
                    }
                }

                if ( vr.timout.vvo2ResponseTime.data() > 0 )
                {
                    if ( display.BVV.VVO_2.data() > 0 )
                    {
                        if ( sys.time.curent.data() < vr.timout.vvo2ResponseTime.data() )
                        {
                            vr.temp.vvo2ResponseError.setData( 0 );
                        }
                    } else
                    {
                        if ( sys.time.curent.data() >= vr.timout.vvo2ResponseTime.data() )
                        {
                            vr.temp.vvo2ResponseError.setData( 1 );
                            vr.timout.vvo2ResponseTime.setData( 0 );
                        }
                    }
                }"
        },
        {
            "comment":"При изменении температуры уставки - Отобразить и Запись в базу ",
            "name":"save_settings_temp_sut",
            "sources":["settings.temp.sut"],
            "processing":"
                if(vr.msg.A9ConnError.data() == 1)
                {
                    display.temp.t_ust.setData( settings.temp.sut.data() );
                    saveSettings('temp','sut', settings.temp.sut.data() );
                }
                "
        },
        {
            "name":"testArchive",
            "sources":["sys.time.curent"],
            "processing":
"
display.temp.t_sal.setData(     display.temp.t_sal.data()   +10);
display.temp.t_pr.setData(      display.temp.t_pr.data()    +10);
display.temp.t_nv.setData(      display.temp.t_nv.data()    +10);
display.temp.t_kotl.setData(    display.temp.t_kotl.data()  +10);

display.U_I.I_bat.setData(      display.U_I.I_bat.data()    +10);
display.U_I.I_gen.setData(      display.U_I.I_gen.data()    +10);
display.U_I.U_net.setData(      display.U_I.U_net.data()    +10);

archive(1, 50);
archive(6, 50);

archive(2, 50);
archive(3);
archive(4, 50);
archive(5);

archive(44);
archive(45);
archive(46);
archive(47);

archive(19);
archive(19);
archive(19);

archive(18);
archive(18);
archive(18);

archive(19);
archive(18);
archive(19);
archive(18);

"
    }
    ]
}
